{"version":3,"sources":["../../styles/colors.js","../../icons/CommandLineIcon.js","../../icons/LandingIcon.js","../../icons/StartIcon.js","../../utils/compose.js","../../components/widgets/TagWidget.js","../../lib/constants.js","../../lib/StepUtils.js","../../lib/StringUtils.js","components/NameValue.tsx","components/Sidebar.tsx","components/TestInfo.tsx","../../config.js","components/TagWidget.tsx","components/common/FreeDragLine.tsx","components/common/PositionSpot.tsx","components/common/AtoBline.tsx","components/DrawDragLine.tsx","components/ImageMatchView.tsx","components/common/VerticalLine.tsx","components/StepItem.tsx","components/StepsInfo.tsx","components/TestIcon.tsx","components/TestView.tsx","App.tsx","index.tsx"],"names":["darkBg","darkBg2","logoColor","secondary","bg2","defaultBg","transparentWhite","superLight","errorWarm","errorGradient","successGradient","success","concat","StartIcon","props","_jsx","SvgIcon","_objectSpread","children","_jsxs","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","x1","y1","x2","y2","LandingIcon","d","compose","_len","arguments","length","fns","Array","_key","reduce","a","b","apply","enhance","withStyles","tag","marginRight","inject","observer","classes","name","dbStore","_props$fallbackColor","fallbackColor","getTagByName","style","backgroundColor","color","onClick","cursor","chip","Chip","size","label","className","description","Tooltip","title","Directions","firstDragPoint","step","_step$mouseMoveCoordi","_step$startPositionSo","mouseMoveCoordinates","dragType","startPositionSource","point","lastDragPoint","_step$mouseMoveCoordi2","_step$endPositionSour","endPositionSource","infoStringY","y","toFixed","infoStringX","x","verticalDragDirection","horizontalDragDirection","isHorizontalDrag","horizontalDirection","verticalDirection","Math","abs","dragAndDropGuess","_step$mouseMoveCoordi3","longClick","minX","maxX","minY","maxY","forEach","p","dragDirection","isHorizontal","ScanTextOperators","contains","id","js","equals","notContains","greaterThan","lessThan","formatUserfacingTestId","testId","substr","toUpperCase","min2Digits","number","msToTime","duration","seconds","floor","minutes","hours","toDateTime","date","dateObj","Date","isNaN","getDate","toLocaleDateString","toLocaleTimeString","formatDateTime","getScanTextLabel","_ScanTextOperators$st","scanTextLabel","operator","separatorStyle","borderBottom","marginBottom","paddingBottom","h3Style","fontSize","fontWeight","NameValue","val","value","Boolean","Typography","variant","ariaLabel","Metrics","appStartupDuration","skippedFramesCount","typoStyle","lineHeight","listItemStyle","paddingRight","paddingLeft","CssTextField","root","borderBottomColor","TextField","CssSelect","Select","renderTestResultRows","test","index","metric","maxValue","testRuns","_Fragment","map","tr","TestResultRow","testRun","formatedValue","percentage","delta","days","formatDuration","display","flexDirection","component","flexGrow","alignItems","background","wasSuccessful","Sidebar","_ref","_batchRun$stats","_batchRun$stats2","_batchRun$stats3","_batchRun$stats4","_batchRun$tests","_batchRun","_batchRun$stats5","_batchRun$stats6","activeTab","setActiveTab","navigate","useNavigate","_React$useState","React","searchKey","filter","currentMetric","_React$useState2","_slicedToArray","values","setValues","_React$useState3","batchRun","tests","_React$useState4","setTests","maxMetricValue","fieldName","Number","MIN_VALUE","t","max","getMaxValue","defaultTest","search","toLowerCase","filteredTests","_test$id","_test$title","includes","devices","some","_d$name","lastTestRun","steps","stepResults","onChange","e","_e$target","target","_defineProperty","successPercentage","stats","successCount","totalCount","flexBasis","padding","overflow","window","open","src","alt","maxWidth","position","cx","cy","r","strokeDasharray","strokeDashoffset","justifyContent","top","sx","failCount","createdOn","stepsCount","version","placeholder","inputProps","MenuItem","Object","keys","List","disablePadding","paddingTop","ListItem","button","divider","ListItemIcon","minWidth","TestIcon","ListItemText","primary","formatId","ArrowForwardIos","opacity","flex","deviceInfo","deviceData","os","osVersion","TestInfo","_test$devices","_testRun$devices","_failedSteps$","failStepRef","console","info","table","packageData","appVersions","successSteps","result","failedSteps","isFailedTest","scrollToFailStep","useCallback","current","scrollIntoView","behavior","block","useEffect","scrollContainer","document","getElementById","setTimeout","scrollTo","left","stepsFailedStyle","textDecoration","marginTop","Grid","container","spacing","item","xs","packageName","minSdk","firstInstallTime","code","targetSdk","lastUpdateTime","device","serial","borderRadius","stepsCountWithSubTestSteps","whiteSpace","message","BatchRunExportDataDirName","TagWidget","tagsMapping","find","marginLeft","DrawWidget","ref","useRef","_useState","useState","_useState2","setSize","getCoordinate","cmd","path","arrowTransform","longClickDot","longClickDotBg","i","firstPoint","lastPoint","oneBefore","dx","dy","deg","atan2","PI","maxHeight","onLoad","event","img","offsetWidth","offsetHeight","preserveAspectRatio","transform","PositionSpot","positionSource","containerRef","CenterFocusWeak","zIndex","AtoBline","p1","p2","centerX","centerY","ArrowBack","DragAndDrop","DrawDragLine","RectView","_match$position","_match$position2","_match$size","_match$size2","match","renderStyle","border","outline","ImageMatchView","matchIndex","matches","selection","roi","rest","_objectWithoutProperties","_excluded","type","rect","VerticalLine","_props$showTip","showTip","borderRight","borderTop","borderLeft","DeviceOrientation","stepType","stepImageIcon","lBox","org","undefined","bottom","formatPercentage","valueNum","parseFloat","pStep","stepName","Fragment","stepImage","getArrows","StepsItem","_step$tags","refList","stepResult","referenceSResult","refTestRun","bSrc","baseSrc","isDiffBatchHovered","setDiffBatchHovered","isDiffViewHovered","setDiffViewHovered","trBaseSrc","_step$point","_step$point2","textLabel","tagWidget","start","end","sDrop","iconDrop","pDrop","stopOnFingerprintFound","ArrowForward","ArrowDownward","ArrowUpward","actions","clearText","push","text","join","allSteps","click","icon","TouchApp","cmdLineIcon","comment","drag","waitForTemplate","HourglassEmpty","waitForDuration","subtype","waitForKeyboard","TextFields","scanText","home","Home","back","KeyboardBackspace","appSwitch","FilterNone","templateAssertion","Search","someContentAssertion","aiAssertion","someContentClick","xyClick","startApp","iosBundleId","switchDevice","MobileScreenShare","roleName","deviceName","stopApp","execScript","CommandLineIcon","language","script","subTest","scanTextAssertion","assertionJs","searchText","scanTextClick","scanTextWait","noDesc","stepText","optional","tags","getStepInfo","isSuccess","createRef","isCopy","copy","similarityWarnThreshold","log","JSON","stringify","executedOn","executionSkipped","isLandscape","currentRotation","orgFrameSrc","originalFrame","screenshot","screenshotSrc","stepHoverDetail","isOriginal","stepColor","lStyleType","boxStyle","textAlign","renderResult","placeHolder","region","minHeight","MaxSize","CardHeader","avatar","Avatar","subheader","action","image","screenSimilarity","onMouseEnter","onMouseLeave","boxShadow","mixBlendMode","fontFamily","stepBox","mt","StepsInfo","_toConsumableArray","currSResult","currStep","_test$steps","missingStepRuns","sResult","_refTestRun$stepResul","refSr","_currSResult","Box","bg","stepsWithImage","ListIcon","avatarSrc","lastStep","TestView","_useParams","useParams","_useParams$testIndex","testIndex","setTest","IconButton","right","Close","commonThemeProps","typography","h1","h2","h3","h4","h5","h6","caption","body1","body2","subtitle1","darkTheme","createTheme","palette","main","brightTheme","App","_batchRun2","alert","error","verifyReportData","ThemeProvider","theme","Routes","Route","element","ReactDOM","render","StrictMode","HashRouter"],"mappings":"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","file":"static/js/main.344da976.chunk.js","sourcesContent":["export const logoBg = '#0a2836'\nexport const darkBg = '#1e4158'\nexport const defaultFont = '#3e3e3e'\nexport const darkBg2 = '#7692a4'\nexport const logoColor = '#10a4da'\nexport const secondary = logoColor\nexport const secondaryBg = '#223d4a'\nexport const deviceMirrorBg = 'rgb(221, 241, 241)'\nexport const bg2 = '#f5f5f5'\nexport const defaultBg = '#FFFFFF'\nexport const invertedFont = '#FFFFFF'\nexport const transparentWhite = 'rgba(255, 255, 255, 0.36)'\nexport const lighterFont = '#60626b'\nexport const lightestFont = '#b4b4b4'\nexport const superLight = '#d7d7d7'\nexport const error = '#f44336'\nexport const errorMedium = '#c93e33'\nexport const errorWarm = '#ff7a59'\nexport const darkErrorFont = '#3a0202'\nexport const errorLight = 'rgb(230, 167, 162)'\nexport const errorGradient = 'linear-gradient(315deg, rgba(255,167,167,1) 0%, rgba(255,221,173,1) 100%)'\nexport const successGradient = 'linear-gradient(315deg, rgba(174,213,129,1) 0%, rgba(249,255,178,1) 100%)'\nexport const feedbackGradient = `linear-gradient(315deg, rgba(3,98,160,1) 0%, ${logoColor} 100%)`\nexport const warning = '#ffb222'\nexport const warningLight = '#f5e49c'\nexport const success = '#AED581'\nexport const successFont = '#577633'\nexport const successLight = '#CDEFA6'\nexport const matchColor = '#ff00ff'\nexport const turmeric = '#c8d051'\nexport const transparentBlack = '#0000009e'\nexport const roiColor = successLight\nexport const tagColors = [\n  '#D4CD7F',\n  '#EBE5BE',\n  '#58A289',\n  '#AECFC5',\n  '#5497A0',\n  '#A9CED5',\n  '#8892B6',\n  '#C1C7D5',\n  '#DDD5C2',\n  '#E9E7DD',\n  '#AFA695',\n  '#D5D1CC',\n  '#E5A09B',\n  '#F2D0D2',\n  '#FA7A89',\n  '#F4BDC3',\n  '#EE7E96',\n  '#F4BED0',\n  '#CE899E',\n  '#E6BECC'\n]\n\nexport const menuColors = ['#EE7E96', '#E5A09B', '#f5e49c', '#8892B6', '#5497A0', '#58A289']\n","import React from 'react'\nimport { SvgIcon } from '@material-ui/core'\n\nfunction StartIcon(props) {\n  return (\n    <SvgIcon {...props}>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      >\n        <polyline points=\"4 17 10 11 4 5\" />\n        <line x1=\"12\" y1=\"19\" x2=\"20\" y2=\"19\" />\n      </svg>\n    </SvgIcon>\n  )\n}\n\nexport default StartIcon\n","import React from 'react'\nimport { SvgIcon } from '@material-ui/core'\n\nfunction LandingIcon(props) {\n  return (\n    <SvgIcon {...props}>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"-10 00 500 500\">\n        <path d=\"M45.989,97.409l-21.813,20.555L5.447,98.089l21.814-20.555L45.989,97.409z\" />\n        <path d=\"M125.485,22.498l-21.811,20.553L84.946,23.176l21.811-20.553L125.485,22.498z\" />\n        <path\n          d=\"M226.65,375.628c12.448,13.211,27.011,24.125,43.031,32.564l130.95-123.396c-7.475-16.492-17.504-31.677-29.954-44.889\n\tL240.007,101.237L95.979,236.956L226.65,375.628z M177.163,252.123l73.166-68.944l48.935,51.931\n\tc18.796,19.946,17.86,51.464-2.086,70.26l-0.819,0.771c-19.946,18.796-51.464,17.858-70.26-2.087L177.163,252.123z\"\n        />\n        <path\n          d=\"M385.073,426.421l22.159-3.438l4.746-21.916c6.283-29.011,5.858-58.136-0.671-85.148L300.118,420.694\n\tC326.692,428.818,355.74,430.972,385.073,426.421z\"\n        />\n        <path\n          d=\"M275.803,284.328l0.819-0.772c7.92-7.463,8.289-19.973,0.828-27.891l-28.381-30.118l-29.538,27.833l28.381,30.118\n\tC255.374,291.417,267.885,291.788,275.803,284.328z\"\n        />\n        <path d=\"M162.857,351.635L53.609,235.697l-40.103,37.789l87.059,92.389L162.857,351.635z\" />\n        <path d=\"M281.367,21.079l-40.103,37.789l109.249,115.938l17.913-61.336L281.367,21.079z\" />\n        <path\n          d=\"M156.518,55.431L135.47,33.094l-21.811,20.553l18.434,19.562l-17.937,16.901L67.01,40.077L45.196,60.632l47.146,50.033\n\tl-17.936,16.901l-18.434-19.562L34.16,128.56l21.048,22.337l18.529,65.835l147.4-138.897L156.518,55.431z\"\n        />\n      </svg>\n    </SvgIcon>\n  )\n}\n\nexport default LandingIcon\n","import React from 'react'\nimport { SvgIcon } from '@material-ui/core'\n\nfunction StartIcon(props) {\n  return (\n    <SvgIcon {...props}>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"-60 00 500 500\">\n        <path d=\"m223.652344 484.691406h29.972656v27.308594h-29.972656zm0 0\" />\n        <path d=\"m114.421875 484.691406h29.96875v27.308594h-29.96875zm0 0\" />\n        <path d=\"m282.972656 158.308594c0-18.152344-3.113281-36.082032-8.984375-53.210938h-179.929687c-5.871094 17.128906-8.984375 35.058594-8.984375 53.210938v190.539062h197.898437zm-48.683594 123.824218h-100.53125v-71.355468c0-27.40625 22.296876-49.703125 49.703126-49.703125h1.125c27.40625 0 49.703124 22.296875 49.703124 49.703125zm0 0\" />\n        <path d=\"m202.507812 12.695312-18.484374-12.695312-18.484376 12.695312c-24.46875 16.804688-44.132812 38.292969-57.90625 62.429688h152.777344c-13.769531-24.136719-33.433594-45.625-57.902344-62.429688zm0 0\" />\n        <path d=\"m184.585938 191.046875h-1.125c-10.882813 0-19.730469 8.851563-19.730469 19.730469v41.382812h40.585937v-41.382812c0-10.878906-8.851562-19.730469-19.730468-19.730469zm0 0\" />\n        <path d=\"m312.945312 219.519531v159.300781h55.101563v-126.945312zm0 0\" />\n        <path d=\"m0 378.820312h55.101562v-159.300781l-55.101562 32.355469zm0 0\" />\n        <path d=\"m114.421875 439.441406v30.691406h29.96875v-26.878906h24.644531v68.746094h29.972656v-68.746094h24.644532v26.878906h29.972656v-30.691406l31.664062-60.621094h-202.53125zm0 0\" />\n      </svg>\n    </SvgIcon>\n  )\n}\n\nexport default StartIcon\n","/*\n * takes an unlimited amount of functions as arguments and composes them to a single function\n * which, when called, calls each one in order with the return value of the latest\n * */\n\nfunction compose(...fns) {\n  return fns.reduce((a, b) => (...args) => a(b(...args)))\n}\n\nexport default compose\n","//@ts-check\nimport React from 'react'\nimport { Chip, Tooltip, withStyles } from '@material-ui/core'\nimport { inject, observer } from 'mobx-react'\nimport { bg2 } from '../../styles/colors'\nimport compose from '../../utils/compose'\n\nconst styles = () => ({\n  tag: { height: 20, marginRight: 6 }\n})\n\nconst enhance = compose(\n  // @ts-ignore\n  withStyles(styles),\n  inject('dbStore'),\n  observer\n)\n\n/**\n * @typedef Props\n * @prop {string} name\n * @prop {any} classes\n * @prop {any} onClick\n * @prop {any} style\n */\n\n/**\n * @param {Props} props\n */\nfunction TagWidget(props) {\n  // @ts-ignore\n  const { classes, name, dbStore, fallbackColor = bg2 } = props\n  const tag = dbStore.getTagByName(name)\n  const style = { backgroundColor: tag?.color || fallbackColor, ...props.style }\n\n  if (props.onClick) style.cursor = 'pointer'\n\n  const chip = <Chip size=\"small\" label={name} className={classes.tag} style={style} onClick={props.onClick} />\n  if (tag?.description) return <Tooltip title={tag.description}>{chip}</Tooltip>\n  else return chip\n}\n\n// @ts-ignore\nexport default enhance(TagWidget)\n","export const NpmScope = '@repeato'\nexport const NpmPackageName = 'cli-testrunner'\nexport const ExceptionHandlerResumeExecutionDelay = 2500\nexport const minLongClickDuration = 2000\nexport const MinimumTemplateContrast = 20\nexport const OnlineAvailableOcrLanguages = ['deu', 'eng', 'equ', 'fra', 'ita', 'osd', 'ara']\nexport const TessDataChecksums = {\n  // english tessdata file is important because otherwise fallback locator search might cause the worker thread to crash in case of a corrupt language file.\n  // we've had that case. That's why we now check with a checksum after downloading.\n  'eng.traineddata': 'daa0c97d651c19fba3b25e81317cd697e9908c8208090c94c3905381c23fc047'\n}\nexport const maxTimesToShowIntroDialog = 3\nexport const defaultAllowedStepsPerTest = 30\nexport const DefaultMaxVideoResolution = 2200 // there is no gain in using a higher resolution for streaming the device screen. But limiting it will reduce the workload for Repeato significantly.\n\nexport const FrameSource = {\n  Live: 'Live', // the current device screenshot\n  Original: 'Original', // the device screenshot when the step was originally created (only available when editing the step)\n  TestRun: 'TestRun'\n}\n\nexport const APP_PROTOCOL = process.env.NODE_ENV === 'development' ? 'repeato-app-dev' : 'repeato-app'\nexport const ADMIN_URL = 'https://clients.repeato.app/'\nexport const GA4_MEASUREMENT_ID = 'G-8Q6FSNGBF9'\nexport const GA4_API_SECRET = 'rpBdkPzsQpqAwa9_Dy4JcA'\nexport const MAX_EDITED_TESTS_HISTORY = 12\n\nexport const IosConnectorName = 'RepeatoCapture'\nexport const LegacyKeyboardPackageName = 'com.android.adbkeyboard'\n\nexport const ConnectionStatus = {\n  notConnected: { label: 'Not connected' },\n  waitingForDeviceToBeOnline: { label: 'Waiting for device to be online...' },\n  fetchingDeviceData: { label: 'Fetching device info...' },\n  waitingForTouchConnectorConnected: { label: 'Initialising touch connector...' },\n  waitingForImageStreamConnected: { label: 'Initialising video connector...' },\n  fullyConnected: { label: 'Fully connected' },\n  disconnecting: { label: 'Disconnecting...' }\n}\n\nexport const DangerousAndroidPermissions = [\n  'READ_CALENDAR',\n  'WRITE_CALENDAR',\n  'READ_CALL_LOG',\n  'WRITE_CALL_LOG',\n  'PROCESS_OUTGOING_CALLS',\n  'CAMERA',\n  'READ_CONTACTS',\n  'WRITE_CONTACTS',\n  'GET_ACCOUNTS',\n  'ACCESS_FINE_LOCATION',\n  'ACCESS_COARSE_LOCATION',\n  'RECORD_AUDIO',\n  'READ_PHONE_STATE',\n  'READ_PHONE_NUMBERS',\n  'CALL_PHONE',\n  'ANSWER_PHONE_CALLS',\n  'ADD_VOICEMAIL',\n  'USE_SIP',\n  'BODY_SENSORS',\n  'SEND_SMS',\n  'RECEIVE_SMS',\n  'READ_SMS',\n  'RECEIVE_WAP_PUSH',\n  'RECEIVE_MMS',\n  'READ_EXTERNAL_STORAGE',\n  'WRITE_EXTERNAL_STORAGE'\n]\n\nexport const TouchConnectorTypes = {\n  MiniTouch: { name: 'Alpha', id: 1 },\n  UiAutomator: { name: 'Beta', id: 2 },\n  CmdCpy: { name: 'Gamma', id: 3 }\n}\n\nexport const Directions = { UP: 'up', DOWN: 'down', LEFT: 'left', RIGHT: 'right' }\nexport const ReportWebsiteBaseUrl = 'https://reports.repeato.app'\nexport const DATABASE_FILENAME = 'database.rpt'\nexport const IssueDirName = 'issue-report-screenshots'\n\n// ISO 639-1 + country code (if necessary), language label\nexport const SupportedLangs = {\n  bn: 'Bengali',\n  zh: 'Chinese',\n  nl: 'Dutch',\n  en: 'English',\n  de: 'German',\n  fr: 'French',\n  hi: 'Hindi',\n  id: 'Indonesian',\n  it: 'Italian',\n  ja: 'Japanese',\n  ko: 'Korean',\n  mr: 'Marathi',\n  pl: 'Polish',\n  'pt-PT': 'Portuguese (Portugal)',\n  'pt-BR': 'Portuguese (Brazil)',\n  ru: 'Russian',\n  es: 'Spanish',\n  ta: 'Tamil',\n  te: 'Telugu',\n  tr: 'Turkish',\n  ukr: 'Ukrainian'\n}\nexport const DefaultLang = 'en'\n","import { Directions } from './constants'\n\n/**\n * @param {*} step\n */\nexport const firstDragPoint = step => {\n  if (step.mouseMoveCoordinates?.length === 0) return null\n  if (step.dragType === 'DragAndDrop') return step.mouseMoveCoordinates[0]\n  return step.startPositionSource?.point\n}\n\n/**\n * @param {*} step\n */\nexport const lastDragPoint = step => {\n  if (step.mouseMoveCoordinates?.length === 0) return null\n  if (step.dragType === 'DragAndDrop') return step.mouseMoveCoordinates[step.mouseMoveCoordinates.length - 1]\n  return step.endPositionSource?.point\n}\n\n/**\n * @param {*} point\n */\nexport const infoStringY = point => {\n  return point ? `${(point.y * 100).toFixed(1)}%` : ''\n}\n\n/**\n * @param {*} point\n */\nexport const infoStringX = point => {\n  return point ? `${(point.x * 100).toFixed(1)}%` : ''\n}\n\n/**\n * @param {*} point\n */\nexport const infoString = point => `x/y: ${(point.x * 100).toFixed(1)}% / ${(point.y * 100).toFixed(1)}%`\n\n/**\n * @param {*} step\n */\nexport const verticalDragDirection = step => {\n  // returns values < 0 for up movement and > 0 for down movement\n  return lastDragPoint(step) && firstDragPoint(step) ? lastDragPoint(step).y - firstDragPoint(step).y : null\n}\n\n/**\n * @param {*} step\n */\nexport const horizontalDragDirection = step => {\n  // returns values < 0 for left movement and > 0 for right movement\n  return lastDragPoint(step) && firstDragPoint(step) ? lastDragPoint(step).x - firstDragPoint(step).x : null\n}\n\n/**\n * @param {*} step\n */\nexport const isHorizontalDrag = step => {\n  const horizontalDirection = horizontalDragDirection(step)\n  const verticalDirection = verticalDragDirection(step)\n  return horizontalDirection !== null && verticalDirection !== null ? Math.abs(horizontalDirection) - Math.abs(verticalDirection) > 0 : null\n}\n\n/**\n * @param {*} step\n */\nexport const dragAndDropGuess = step => {\n  // is used to check whether this was a horizontal or vertical drag (scroll operation, slider placement) or if it was a drag and drop\n  if (step.longClick) return true\n\n  let minX = 1,\n    maxX = 0,\n    minY = 1,\n    maxY = 0\n\n  // @ts-ignore\n  step.mouseMoveCoordinates?.forEach(p => {\n    if (p.x > maxX) maxX = p.x\n    if (p.x < minX) minX = p.x\n    if (p.y > maxY) maxY = p.y\n    if (p.y < minY) minY = p.y\n  })\n  const dx = maxX - minX\n  const dy = maxY - minY\n  const tolerance = 0.1\n  // assume that if there was a 10% movement in both x and y diection, it was a drag and drop gesture\n  // this is probably not always true, but the user is always free to correct the step by editing it\n  return dx > tolerance && dy > tolerance\n}\n\n/**\n * @param {*} step\n */\nexport const dragDirection = step => {\n  const isHorizontal = isHorizontalDrag(step)\n  // keep in mind: drag direction is oposite to scroll direction\n  if (isHorizontal === null) return null\n  else if (isHorizontal) {\n    const horizontalDirection = horizontalDragDirection(step)\n    return horizontalDirection && horizontalDirection < 0 ? Directions.LEFT : Directions.RIGHT\n  } else {\n    const verticalDirection = verticalDragDirection(step)\n    return verticalDirection && verticalDirection < 0 ? Directions.UP : Directions.DOWN\n  }\n}\n","//@ts-ignore\nimport React from 'react'\nimport { CommandLineIcon, LandingIcon, StartIcon } from '../icons'\nimport {\n  ArrowBack,\n  ArrowDownward,\n  ArrowForward,\n  ArrowUpward,\n  FilterNone,\n  Home,\n  HourglassEmpty,\n  KeyboardBackspace,\n  List,\n  Search,\n  TextFields,\n  TouchApp,\n  Comment,\n  MobileScreenShare\n} from '@material-ui/icons'\nimport TagWidget from '../components/widgets/TagWidget'\nimport {\n  dragAndDropGuess,\n  dragDirection,\n  firstDragPoint,\n  horizontalDragDirection,\n  infoStringX,\n  infoStringY,\n  isHorizontalDrag,\n  lastDragPoint,\n  verticalDragDirection\n} from './StepUtils'\n\nconst ScanTextOperators = {\n  contains: { id: 'contains', label: 'contain', js: 'scannedText.includes(\"searchText\")' },\n  equals: { id: 'equals', label: 'equal', js: 'scannedText === \"searchText\"' },\n  notContains: { id: 'notContains', label: 'not contain', js: 'scannedText.includes(\"searchText\") == false' },\n  greaterThan: { id: 'greaterThan', label: 'be greater than', js: 'parseFloat(scannedText) > parseFloat(\"searchText\")' },\n  lessThan: { id: 'lessThan', label: 'be less than', js: 'parseFloat(scannedText) < parseFloat(\"searchText\")' }\n}\n\nfunction formatUserfacingStepId(stepId) {\n  return stepId.substr(0, 6).toUpperCase()\n}\n\nfunction formatUserfacingTestId(testId) {\n  return testId?.substr(0, 6).toUpperCase()\n}\n\n/**\n * @param {String} str\n * @param {String} separator\n */\nfunction stringToSlug(str, separator) {\n  str = str.trim()\n  str = str.toLowerCase()\n\n  // remove accents, swap ñ for n, etc\n  const from = 'åàáãäâèéëêìíïîòóöôùúüûñç·/_,:;'\n  const to = 'aaaaaaeeeeiiiioooouuuunc------'\n\n  for (let i = 0, l = from.length; i < l; i++) {\n    str = str.replace(new RegExp(from.charAt(i), 'g'), to.charAt(i))\n  }\n\n  return str\n    .replace(/[^a-z0-9 -]/g, '') // remove invalid chars\n    .replace(/\\s+/g, '-') // collapse whitespace and replace by -\n    .replace(/-+/g, '-') // collapse dashes\n    .replace(/^-+/, '') // trim - from start of text\n    .replace(/-+$/, '') // trim - from end of text\n    .replace(/-/g, separator)\n}\n/**\n * @param {number} duration in seconds\n */\nfunction formatDuration(duration) {\n  var delta = duration\n\n  // calculate (and subtract) whole days\n  var days = Math.floor(delta / 86400)\n  delta -= days * 86400\n\n  // calculate (and subtract) whole hours\n  var hours = Math.floor(delta / 3600) % 24\n  delta -= hours * 3600\n\n  // calculate (and subtract) whole minutes\n  var minutes = Math.floor(delta / 60) % 60\n  delta -= minutes * 60\n\n  // what's left is seconds\n  var seconds = delta % 60\n\n  if (days) {\n    days = `${days}d `\n  } else {\n    days = ''\n  }\n  return `${days}${min2Digits(hours)}:${min2Digits(minutes)}:${min2Digits(Math.floor(seconds))}`\n}\n\nconst min2Digits = number => {\n  if (number < 10) {\n    return '0' + number\n  }\n  return number\n}\n\n/**\n * Convert ms to human readable time\n * @param duration\n * @returns string\n */\nconst msToTime = duration => {\n  if (!duration) return ''\n  let seconds = Math.floor((duration / 1000) % 60)\n  let minutes = Math.floor((duration / (1000 * 60)) % 60)\n  let hours = Math.floor((duration / (1000 * 60 * 60)) % 24)\n\n  if (hours < 10) {\n    hours = '0' + hours\n  }\n  if (minutes < 10) {\n    minutes = '0' + minutes\n  }\n  if (seconds < 10) {\n    seconds = '0' + seconds\n  }\n  return hours + ':' + minutes + ':' + seconds\n}\n\n/**\n * Convert string to local date time format\n * @param date\n * @returns\n */\nconst toDateTime = date => {\n  if (!date) return ''\n\n  const dateObj = new Date(date)\n\n  if (isNaN(dateObj.getDate())) return ''\n\n  return dateObj.toLocaleDateString() + ' ' + dateObj.toLocaleTimeString()\n}\n\nfunction getRandomCharacter() {\n  const alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  const index = Math.floor((alphabet.length - 1) * Math.random())\n  return alphabet[index]\n}\n\nfunction trim(string, char) {\n  if (char === ']') char = '\\\\]'\n  if (char === '\\\\') char = '\\\\\\\\'\n  return string.replace(new RegExp('^[' + char + ']+|[' + char + ']+$', 'g'), '')\n}\n\nfunction formatDateForFilename(date) {\n  const dateTimeFormat = new Intl.DateTimeFormat('de', {\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric',\n    year: 'numeric',\n    month: 'numeric',\n    day: 'numeric'\n  })\n  const [\n    { value: day },\n    ,\n    { value: month },\n    ,\n    { value: year },\n    ,\n    { value: hour },\n    ,\n    { value: minute },\n    ,\n    { value: second }\n  ] = dateTimeFormat.formatToParts(date)\n  const dateTimeStr = `${year}-${month}-${day}-${hour}-${minute}-${second}`\n  return dateTimeStr\n}\n\nfunction formatDateTime(date) {\n  if (!date) return ''\n  return `${date.toLocaleDateString()} ${date.toLocaleTimeString()}`\n}\n\n/**\n * Similar to grep:\n * 1. Filter each line by looking for a string.\n * 2. Remove removeString\n * 3. Return first line\n * @param {string} string\n * @param {string} search regex eg. \"myVariable=([0-9])\"\n * @returns {string}\n */\nfunction filterMultiline(string, search) {\n  const lines = string.split('\\n')\n  const filteredLines = lines.map(line => line.trim()).filter(line => line.length > 0)\n  const results = []\n  const regex = new RegExp(search)\n\n  filteredLines.forEach(line => {\n    const match = line.match(regex)\n    if (match) {\n      if (match.length > 1) {\n        results.push(match[1].replace('\\r', '').trim())\n      } else {\n        results.push(match[0].replace('\\r', '').trim())\n      }\n    }\n  })\n\n  if (results.length > 1) {\n    console.warn('Multiple lines found:', results)\n    return results[0]\n  } else if (results.length === 1) {\n    return results[0]\n  } else {\n    return null\n  }\n}\n\nfunction truncateStart(string, maxLength) {\n  if (string.length > maxLength) {\n    string = '...' + string.substring(string.length - maxLength, string.length)\n  }\n  return string\n}\n\nfunction truncate(string, maxLength) {\n  if (string.length > maxLength + 3) {\n    string = string.substring(0, maxLength - 3) + '...'\n  }\n\n  return string\n}\n\n/**\n *\n * @param {string} string\n * @param {Object.<string, string>} replaceDict\n * @returns String\n */\nfunction replaceAllDict(string, replaceDict) {\n  for (var key in replaceDict) {\n    // @ts-ignore\n    string = replaceAll(string, key, replaceDict[key])\n  }\n  return string\n}\n/**\n * Replaces all occurenses of a string\n * @param {string} string\n * @param {string} search\n * @param {string} replacement\n */\nfunction replaceAll(string, search, replacement) {\n  return string.split(search).join(replacement)\n}\n\nfunction getScanTextLabel(step) {\n  if (step.scanTextLabel) return step.scanTextLabel\n  // in batchViewer we can't access view properties because we don't have MST models. This is the fallback:\n  return ScanTextOperators[step.operator]?.label\n}\n\n/**\n * Return step name according to the type of step\n * @param {*} step\n * @param type\n * @returns\n */\nconst getStepInfo = (step, type = 'all', tagWidget = true) => {\n  let start = ''\n  let end = ''\n  let sDrop = ''\n  let iconDrop = null\n\n  const pDrop = step.longClick ? ' and drop' : ''\n\n  if (step.type === 'drag') {\n    if (step.stopOnFingerprintFound) {\n      sDrop = `until fingerprint is found`\n    } else if (isHorizontalDrag(step)) {\n      const horizontalDirection = horizontalDragDirection(step)\n      iconDrop = horizontalDirection && horizontalDirection > 0 ? ArrowForward : ArrowBack\n      start = infoStringX(firstDragPoint(step))\n      end = infoStringX(lastDragPoint(step))\n      sDrop = `${start} -> ${end}`\n    } else {\n      const verticalDirection = verticalDragDirection(step)\n      iconDrop = verticalDirection && verticalDirection > 0 ? ArrowDownward : ArrowUpward\n      start = infoStringY(firstDragPoint(step))\n      end = infoStringY(lastDragPoint(step))\n      sDrop = `${start} -> ${end}`\n    }\n  }\n\n  let textLabel\n\n  if (step.type === 'text') {\n    const actions = []\n    step.clearText && actions.push('Clear text')\n    step.text && actions.push('Type')\n    textLabel = actions.join(' and ')\n  }\n\n  const allSteps = {\n    click: {\n      icon: TouchApp,\n      primary: step.longClick ? 'Long Click' : 'Click',\n      secondary: 'on fingerprint',\n      cmdLineIcon: '👆'\n    },\n    comment: {\n      // icon: Comment,\n      primary: <b>{step.title}</b>,\n      secondary: step.description,\n      cmdLineIcon: '💬'\n    },\n    drag: {\n      icon: iconDrop,\n      primary: `Drag ${dragAndDropGuess(step) ? 'around' : dragDirection(step) || ''}${pDrop}`,\n      secondary: sDrop,\n      cmdLineIcon: '👆'\n    },\n    waitForTemplate: {\n      icon: HourglassEmpty,\n      primary: 'Wait',\n      secondary: 'for fingerprint to show',\n      cmdLineIcon: '⏳'\n    },\n    waitForDuration: {\n      icon: HourglassEmpty,\n      primary: 'Wait',\n      secondary: `for ${step.duration} ms ${step.subtype === 'waitForAnimationFinish' ? ' (screen animation)' : ''}`,\n      cmdLineIcon: '⏳'\n    },\n    waitForKeyboard: {\n      icon: HourglassEmpty,\n      primary: 'Wait',\n      secondary: 'for keyboard to show up',\n      cmdLineIcon: '⌨️'\n    },\n    text: {\n      icon: TextFields,\n      primary: textLabel,\n      secondary: step.text && `\"${step.text}\"`,\n      cmdLineIcon: '📝'\n    },\n    scanText: {\n      primary: 'Scan for text',\n      secondary: '',\n      cmdLineIcon: '🔎'\n    },\n    home: {\n      icon: Home,\n      primary: 'Home press',\n      secondary: '',\n      cmdLineIcon: '🏠'\n    },\n    back: {\n      icon: KeyboardBackspace,\n      primary: 'Back press',\n      secondary: '',\n      cmdLineIcon: '⬅️'\n    },\n    appSwitch: {\n      icon: FilterNone,\n      primary: 'Show app switch',\n      secondary: '',\n      cmdLineIcon: '📱'\n    },\n    templateAssertion: {\n      icon: Search,\n      primary: 'Check specific element',\n      secondary: '',\n      cmdLineIcon: '✅'\n    },\n    someContentAssertion: {\n      primary: 'Check dynamic content is shown ' + (step.aiAssertion ? ':' : ''),\n      secondary: step.aiAssertion || '',\n      cmdLineIcon: '✅'\n    },\n    someContentClick: {\n      primary: 'Click',\n      secondary: 'on some content at x/y',\n      cmdLineIcon: '👆'\n    },\n    xyClick: {\n      primary: 'Click',\n      secondary: `at x/y: ${Math.floor(step.point?.x * 100)}% / ${Math.floor(step.point?.y * 100)}%`,\n      cmdLineIcon: '👆'\n    },\n    startApp: {\n      icon: StartIcon,\n      primary: 'Start App',\n      secondary: [step.packageName, step.iosBundleId].join(' | '),\n      cmdLineIcon: '🚀'\n    },\n    switchDevice: {\n      icon: MobileScreenShare,\n      primary: 'Switch Device',\n      secondary: [step.roleName, step.deviceName].join(' | '),\n      cmdLineIcon: '📱'\n    },\n    stopApp: {\n      icon: LandingIcon,\n      primary: 'Stop App',\n      secondary: step.packageName ? step.packageName : step.iosBundleId,\n      cmdLineIcon: '🛬'\n    },\n    execScript: {\n      icon: CommandLineIcon,\n      primary: step.language === 'cli' ? 'Exec Command Line Script' : 'Exec JavaScript',\n      secondary: step.script,\n      cmdLineIcon: '>'\n    },\n    subTest: {\n      icon: List,\n      primary: 'SubTest',\n      secondary: '',\n      cmdLineIcon: '>'\n    },\n    scanTextAssertion: {\n      icon: Search,\n      primary: 'Check for text',\n      secondary: step.assertionJs ? `Check: ${step.assertionJs}` : `Scanned text should ${getScanTextLabel(step)} \"${step.searchText}\"`,\n      cmdLineIcon: '✅'\n    },\n    scanTextClick: {\n      primary: 'Click on text',\n      secondary: `\"${step.searchText}\"`,\n      cmdLineIcon: '👆'\n    },\n    scanTextWait: {\n      icon: HourglassEmpty,\n      primary: 'Wait',\n      secondary: step.assertionJs ? `Until true: ${step.assertionJs}` : `Until scanned text ${getScanTextLabel(step)} \"${step.searchText}\"`,\n      cmdLineIcon: '⏳'\n    }\n  }\n\n  const noDesc = 'No description found for this element'\n  const stepText = allSteps[step.type] || {\n    primary: noDesc,\n    secondary: noDesc,\n    icon: TouchApp,\n    cmdLineIcon: '👆'\n  }\n  if (step.optional) stepText.primary = `Optional ${stepText.primary}`\n  if (tagWidget && step.tags) {\n    stepText.secondary = (\n      <span>\n        {stepText.secondary}{' '}\n        {step.tags.map(tag => (\n          <TagWidget name={tag} key={tag} />\n        ))}\n      </span>\n    )\n  }\n  return type === 'all' ? stepText : stepText[type]\n}\n\n/**\n * Looks for placeholders in str in the form of \"$VARNAME\" and adds an entry to replaceStrings dictionary:\n *  Key: The $VARNAME variable\n *  Value: The respective env var value from process.env\n * @param {*} str\n * @param {*} replaceStrings\n */\nfunction addReplacementStringsWithEnvVars(str, replaceStrings) {\n  const vars = str.match(/\\$[a-zA-Z0-9_]+/g)\n  vars?.forEach(envVar => {\n    if (!replaceStrings[envVar]) {\n      replaceStrings[envVar] = process.env[envVar.replace('$', '')]\n    }\n  })\n}\n\n// For some reason we used a single number to version mapping in the iOS connector\n// In the long run I'd like to get rid of it.\nconst protocolToVersionNum = num => {\n  const str = '' + num\n  return [str[0], str[1], str[2]].join('.')\n}\n\nconst getPropFromIosPackageInfo = (packageInfo, prop) => {\n  /**\n   *CFBundleIdentifier = \"com.stephanpetzl.film-o-matic\";\n    CFBundleInfoDictionaryVersion = \"6.0\";\n    CFBundleName = MovieSwift;\n    CFBundleVersion = 1400;\n    ...\n   */\n  const regex = new RegExp(`${prop} = (.*);`)\n  const matches = regex.exec(packageInfo)\n  if (matches && matches.length > 1) {\n    return replaceAll(matches[1], '\"', '').trim()\n  } else return undefined\n}\n\n// Unfortunately this never worked in release builds- always reported wrong line numbers\nconst stacktraceToLineNumber = (stack, offset = -2) => {\n  console.info('stacktraceToLineNumber', stack)\n  const regex = new RegExp(`([0-9]+:[0-9]+)`)\n  const matches = regex.exec(stack)\n  if (!matches?.length) {\n    return ''\n  } else {\n    const lineAndCol = matches[1].split(':')\n    return `line ${parseInt(lineAndCol[0]) + offset}, column ${lineAndCol[1]}`\n  }\n}\n\n/**\n * Compare two version strings\n * @param {String} version1\n * @param {String} version2\n * @returns {boolean} true if version1 is greater than version2\n */\nconst isVersion1GreaterThanVersion2 = (version1, version2) => {\n  version1 = version1.replace('v', '')\n  version2 = version2.replace('v', '')\n  return (\n    version1.localeCompare(version2, undefined, {\n      numeric: true\n    }) > 0\n  )\n}\n\nexport const formatMegaBytes = (megaBytes, decimals = 2) => {\n  if (!+megaBytes) return '0 Bytes'\n\n  const k = 1024\n  const bytes = megaBytes * k * k\n  const dm = decimals < 0 ? 0 : decimals\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n\n  const i = Math.floor(Math.log(bytes) / Math.log(k))\n\n  return `${parseFloat((bytes / Math.pow(k, i)).toFixed(dm))} ${sizes[i]}`\n}\n\nexport {\n  stringToSlug,\n  truncate,\n  truncateStart,\n  formatDuration,\n  getRandomCharacter,\n  trim,\n  formatDateForFilename,\n  filterMultiline,\n  replaceAll,\n  replaceAllDict,\n  formatUserfacingStepId,\n  formatUserfacingTestId,\n  formatDateTime,\n  msToTime,\n  toDateTime,\n  getStepInfo,\n  addReplacementStringsWithEnvVars,\n  ScanTextOperators,\n  protocolToVersionNum,\n  getPropFromIosPackageInfo,\n  stacktraceToLineNumber,\n  isVersion1GreaterThanVersion2\n}\n","import { Typography } from '@mui/material'\nimport { darkBg2 } from '../../../styles/colors'\n\ninterface Props {\n  name?: String\n  value: String | number\n  className?: string\n}\n\nconst lineStyle = '1px solid ' + darkBg2\n\nconst separatorStyle = {\n  borderBottom: lineStyle,\n  marginBottom: 8,\n  paddingBottom: 6\n}\n\nconst h3Style = { fontSize: '0.8rem', fontWeight: 400, color: darkBg2, marginBottom: 3 }\n\nexport const NameValue = (props: Props) => {\n  const { name, value, className } = props\n\n  let val\n  if (!Boolean(value) && '' + value !== '0') {\n    val = 'Not available'\n  } else {\n    val = value\n  }\n  return (\n    <div style={separatorStyle} className={className || ''}>\n      {name && (\n        <Typography variant=\"h3\" style={h3Style}>\n          {name}\n        </Typography>\n      )}\n      <Typography variant=\"h2\" style={{ fontSize: '1.0rem' }}>\n        {val}\n      </Typography>\n    </div>\n  )\n}\n","import { withStyles } from '@material-ui/core'\nimport { ArrowForwardIos } from '@material-ui/icons'\nimport { List, ListItem, ListItemIcon, ListItemText, MenuItem, Select, TextField, Typography } from '@mui/material'\nimport * as React from 'react'\nimport { TestIcon } from '.'\nimport { formatDuration, formatUserfacingTestId as formatId, toDateTime } from '../../../lib/StringUtils'\nimport { darkBg, darkBg2, defaultBg, errorGradient, errorWarm, success, successGradient, superLight } from '../../../styles/colors'\nimport { StepResult, Test, TestRun } from '../types'\nimport { NameValue } from './NameValue'\nimport { useNavigate } from 'react-router'\n\nconst ariaLabel = { 'aria-label': 'description' }\nconst Metrics: any = {\n  duration: 'Test Run Duration',\n  appStartupDuration: 'App Startup Duration',\n  skippedFramesCount: 'Skipped Frames Count'\n}\n\ninterface SidebarProps {\n  activeTab: number | null\n  setActiveTab: React.Dispatch<React.SetStateAction<number | null>>\n}\n\nconst typoStyle = {\n  fontSize: '0.9rem',\n  lineHeight: '1.3'\n}\n\nconst lineStyle = '1px solid ' + darkBg2\nconst FirstColWidth = 135\n\nconst listItemStyle = {\n  paddingRight: 0,\n  paddingLeft: 0\n}\n\nconst CssTextField = withStyles({\n  root: {\n    '& input': {\n      color: defaultBg,\n      fontWeight: '100'\n    },\n    '& label.Mui-focused': {\n      color: defaultBg\n    },\n    // hover border color\n    '& .MuiInput-underline:hover:before': {\n      borderBottom: '1px solid ' + superLight\n    },\n    '& .MuiInput-underline:before': {\n      borderBottomColor: superLight\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: defaultBg\n    }\n  }\n})(TextField)\n\nconst CssSelect = withStyles({\n  root: {\n    '& input': {\n      color: defaultBg,\n      fontWeight: '100'\n    },\n    '& label.Mui-focused': {\n      color: defaultBg\n    },\n    // hover border color\n    '& .MuiInput-underline:hover:before': {\n      borderBottom: '1px solid ' + superLight\n    },\n    '& .MuiInput-underline:before': {\n      borderBottomColor: superLight\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: defaultBg\n    }\n  }\n})(Select as any)\n\nconst renderTestResultRows = (test: Test, index: number, metric: string, maxValue: number) => {\n  //test.testRuns.sort((a: any, b: any) => Date.parse(b.date) - Date.parse(a.date))\n  const testRuns: TestRun[] = test.testRuns\n  return (\n    <>\n      {testRuns.map((tr: TestRun, index: number) => (\n        <TestResultRow key={tr.id} testRun={tr} metric={metric} maxValue={maxValue} />\n      ))}\n    </>\n  )\n}\ninterface TestResultRowProps {\n  testRun: TestRun\n  metric: string\n  maxValue: number\n}\n\nconst TestResultRow = (props: TestResultRowProps) => {\n  const { testRun, metric, maxValue } = props\n  const value = testRun[metric]\n  let formatedValue, percentage\n  if (value) {\n    formatedValue = '' + value\n    switch (metric) {\n      case 'duration':\n        formatedValue = value > 1000 ? formatDuration(value / 1000) : value + ' ms'\n        break\n      case 'appStartupDuration':\n        formatedValue = value + ' ms'\n        break\n    }\n    percentage = (100.0 * value) / maxValue\n  } else {\n    formatedValue = 'N/A'\n    percentage = 0\n  }\n\n  return (\n    <Typography style={{ display: 'flex', flexDirection: 'row' }} variant=\"body2\" component=\"div\">\n      <div style={{ width: FirstColWidth }}>{toDateTime(testRun.date)}</div>\n      <div style={{ marginRight: 10 }}>{formatedValue}</div>\n\n      <div style={{ display: 'flex', flexGrow: 1, alignItems: 'center' }}>\n        <div style={{ height: 3, width: `${percentage}%`, background: testRun.wasSuccessful ? successGradient : errorGradient }}></div>\n      </div>\n    </Typography>\n  )\n}\nconst getMaxValue = (fieldName: string) => {\n  var maxValue = Number.MIN_VALUE\n\n  batchRun.tests.forEach((t: any) =>\n    t.testRuns.forEach((tr: any) => {\n      if (tr[fieldName]) {\n        maxValue = Math.max(maxValue, tr[fieldName])\n      }\n    })\n  )\n\n  return maxValue\n}\n\nexport const Sidebar = ({ activeTab, setActiveTab }: SidebarProps) => {\n  const navigate = useNavigate()\n\n  const [values, setValues] = React.useState({ searchKey: '', filter: 'all', currentMetric: 'duration' })\n  const [tests, setTests] = React.useState(batchRun.tests)\n\n  var maxMetricValue = getMaxValue(values.currentMetric)\n  // active 1st test\n  const defaultTest = React.useCallback((tests: Test[]) => {}, [])\n\n  // filter the tests on the basis of search string or select filter\n  const search = React.useCallback(() => {\n    const { filter } = values\n\n    const searchKey = values.searchKey.toLowerCase()\n\n    if (!searchKey && filter === 'all') {\n      setTests(batchRun.tests)\n      return\n    }\n\n    let filteredTests: any = batchRun.tests\n\n    if (searchKey)\n      filteredTests = filteredTests.filter(\n        (test: Test) =>\n          test?.id?.toLowerCase().includes(searchKey) ||\n          test?.title?.toLowerCase().includes(searchKey) ||\n          test.devices.some(d => d.name?.toLowerCase().includes(searchKey))\n        // test.devices[0]?.name?.toLowerCase().includes(searchKey)\n      )\n\n    if (filter && filter !== 'all')\n      filteredTests = filteredTests.filter((test: Test) => {\n        const lastTestRun = test?.testRuns[test?.testRuns.length - 1]\n        const steps = lastTestRun?.stepResults.filter((step: StepResult) => step.success === (filter === 'successful')) // get steps according to selected option\n\n        if (filter === 'failed') return steps.length > 0 // if single step is found means it's failed test\n        return steps.length === lastTestRun?.stepResults.length // else all steps true\n      })\n\n    setTests(filteredTests)\n    defaultTest(filteredTests) // active 1st test by default\n  }, [values, defaultTest])\n\n  // when input changed then do search\n  const onChange = (e: any) => {\n    const { name, value } = e.target\n    setValues({ ...values, [name]: value })\n  }\n\n  React.useEffect(() => {\n    search() // perform search whenever filter OR search input value changed\n  }, [values, search])\n\n  // active 1st test by default\n  React.useEffect(() => {\n    defaultTest(batchRun.tests as any)\n  }, [defaultTest])\n\n  const spacing = 30\n  const successPercentage = (100.0 * batchRun.stats?.successCount) / batchRun.stats?.totalCount\n\n  return (\n    <div\n      id=\"sidebar\"\n      style={{\n        color: 'white',\n        flexBasis: activeTab === null ? '100%' : '50%',\n        height: '100%'\n      }}\n    >\n      <div\n        id=\"left-col\"\n        style={{\n          width: 230,\n          background: darkBg,\n          padding: 60,\n          flexBasis: 'auto',\n          flexGrow: 0,\n          overflow: 'auto'\n        }}\n      >\n        <img\n          onClick={() => window.open('https://www.repeato.app')}\n          src=\"assets/logo.png\"\n          alt=\"logo\"\n          style={{ maxWidth: 140, marginBottom: 100, cursor: 'pointer' }}\n        />\n        <div>\n          <Typography variant=\"h3\" component=\"div\">\n            Batch Run Report:\n          </Typography>\n          <Typography variant=\"h1\" component=\"div\" style={{ marginBottom: 26 }}>\n            {batchRun.title}\n          </Typography>\n\n          <div style={{ position: 'relative', marginBottom: spacing }}>\n            <svg width=\"100%\" height=\"100%\" viewBox={`3.8 3.8 34.4 34.4`} className=\"donut\">\n              <circle className=\"donut-ring\" cx=\"21\" cy=\"21\" r=\"15.91549430918954\" fill=\"transparent\" stroke={errorWarm} strokeWidth=\"2\"></circle>\n\n              <circle\n                className=\"donut-segment\"\n                cx=\"21\"\n                cy=\"21\"\n                r=\"15.91549430918954\"\n                fill=\"transparent\"\n                stroke={success}\n                strokeWidth=\"2.05\"\n                strokeDasharray={successPercentage + ' ' + (100 - successPercentage)}\n                strokeDashoffset={25}\n              ></circle>\n            </svg>\n            <div\n              style={{ position: 'absolute', display: 'flex', justifyContent: 'center', alignItems: 'center', width: '100%', height: '100%', top: 0 }}\n            >\n              <Typography sx={typoStyle} component=\"div\" style={{ width: 'fit-content' }}>\n                <div style={{ borderBottom: lineStyle, marginBottom: 4 }}>\n                  {`${batchRun.stats?.failCount} failed`}\n                  <br />\n                  {`${batchRun.stats?.successCount} successful`}\n                  <br />\n                </div>\n                {`${batchRun.tests?.length} total`}\n              </Typography>\n            </div>\n          </div>\n\n          <NameValue name=\"Batch Run Date:\" value={toDateTime(batchRun?.createdOn)} />\n          <NameValue name=\"Duration:\" value={batchRun.stats?.duration} />\n          <NameValue name=\"Steps Executed:\" value={batchRun.stats?.stepsCount} />\n          <NameValue name=\"Repeato Version:\" value={version} />\n        </div>\n      </div>\n      <div\n        id=\"right-col\"\n        className={activeTab !== null ? 'hideInPrintVersion' : ''}\n        style={{\n          background: darkBg2,\n          flexGrow: 1,\n          display: 'flex',\n          flexDirection: 'column'\n        }}\n      >\n        <div style={{ display: 'flex', marginBottom: 16, padding: 40, paddingBottom: 10, alignItems: 'center' }}>\n          <div style={{ flexBasis: activeTab === null ? '50%' : '100%', display: 'flex' }}>\n            {/** @ts-ignore */}\n            <CssTextField\n              variant=\"standard\"\n              style={{ flexBasis: '44%', flexGrow: 1, marginRight: 30 }}\n              placeholder=\"Search (title, id)\"\n              name=\"searchKey\"\n              onChange={onChange}\n              inputProps={ariaLabel}\n            />\n            {/** @ts-ignore */}\n            <CssSelect variant=\"standard\" name=\"filter\" onChange={onChange} value={values.filter} style={{ flexGrow: 1, flexBasis: '10%' }}>\n              <MenuItem value=\"all\">All</MenuItem>\n              <MenuItem value=\"successful\">Successful</MenuItem>\n              <MenuItem value=\"failed\">Failed</MenuItem>\n            </CssSelect>\n          </div>\n          {activeTab === null && (\n            <>\n              <Typography\n                component=\"div\"\n                variant=\"body1\"\n                style={{\n                  paddingRight: 10,\n                  paddingLeft: 30\n                }}\n              >\n                Performance Metric:\n              </Typography>\n              {/** @ts-ignore */}\n              <CssSelect variant=\"standard\" name=\"currentMetric\" onChange={onChange} value={values.currentMetric}>\n                {Object.keys(Metrics).map((metric, index) => (\n                  <MenuItem key={metric} value={metric}>\n                    {Metrics[metric]}\n                  </MenuItem>\n                ))}\n              </CssSelect>\n            </>\n          )}\n        </div>\n\n        <List disablePadding={true} style={{ overflow: 'auto', height: '100%', padding: 40, paddingTop: 0 }}>\n          {tests.map((test: any, index: number) => (\n            <ListItem\n              button\n              divider\n              key={test.id + index}\n              style={listItemStyle}\n              onClick={() => {\n                setActiveTab(index)\n                navigate(`/test/${index}/${test.id}`)\n              }}\n            >\n              <ListItemIcon sx={{ color: 'white', minWidth: 36 }}>\n                <TestIcon test={test} />\n              </ListItemIcon>\n\n              <ListItemText primary={`${test.title}`} secondary={`ID: ${formatId(test.id)}`} style={{ flexGrow: 1, width: 0 }} />\n\n              <ArrowForwardIos style={{ opacity: activeTab === index ? 1 : 0 }} />\n              {activeTab === null && (\n                <div style={{ flex: 1, flexDirection: 'row', flexGrow: 1 }}>\n                  <div>{renderTestResultRows(test, index, values.currentMetric, maxMetricValue)}</div>\n                </div>\n              )}\n            </ListItem>\n          ))}\n        </List>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Grid, Typography } from '@mui/material'\nimport { Test, DeviceData } from '../types'\nimport { msToTime, formatUserfacingTestId as formatId, toDateTime } from '../../../lib/StringUtils'\nimport { NameValue } from './NameValue'\nimport { errorGradient, successGradient } from '../../../styles/colors'\n\ninterface Props {\n  test: Test\n  failStepRef: any\n}\n\nconst deviceInfo = (deviceData: DeviceData) => deviceData?.name + ' / ' + deviceData?.os + ' ' + (deviceData?.osVersion || '')\n\nexport const TestInfo = (props: Props) => {\n  const { test, failStepRef } = props\n  // latest testRun, assuming testRuns are sorted by date ASC (which should always be the case)\n\n  const testRun = test?.testRuns[test?.testRuns.length - 1]\n  console.info('test.testRuns')\n  console.table(test.testRuns)\n  const packageData = testRun?.appVersions[0]\n  const stepResults = testRun?.stepResults\n\n  const successSteps = stepResults.filter(result => result.success)\n  const failedSteps = stepResults.filter(result => !result.success)\n  const isFailedTest = failedSteps.length > 0\n\n  const scrollToFailStep = React.useCallback(() => {\n    if (!failStepRef.current) return\n    failStepRef.current.scrollIntoView({ behavior: 'smooth', block: 'start' })\n  }, [failStepRef])\n\n  React.useEffect(() => {\n    const scrollContainer = document.getElementById('scrollContainer')\n    if (!failStepRef.current) {\n      scrollContainer?.scrollTo({ top: 0, left: 0, behavior: 'auto' }) // if not failed step then scroll to top\n      return\n    }\n    if (isFailedTest) setTimeout(() => scrollToFailStep(), 600) // delay scroll so images get loaded\n  }, [test.id, isFailedTest, failStepRef, scrollToFailStep])\n\n  const stepsFailedStyle = { fontSize: '1rem', textDecoration: 'auto', cursor: 'auto' }\n  if (failedSteps.length > 0) {\n    stepsFailedStyle.textDecoration = 'underline'\n    stepsFailedStyle.cursor = 'pointer'\n  }\n\n  if (!testRun) {\n    return null\n  }\n\n  return (\n    <div>\n      <Typography variant=\"h1\" component=\"div\" style={{ marginBottom: 20, marginTop: 7, fontSize: '1.7rem' }}>\n        {test.title} (ID: {formatId(test.id)})\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={6}>\n          <NameValue name=\"Test Created:\" value={toDateTime(test?.createdOn)} />\n          <NameValue name=\"Package Name:\" value={packageData?.packageName} />\n          <NameValue name=\"Test Run Duration:\" value={msToTime(testRun?.duration)} />\n          <NameValue name=\"App Min Sdk:\" value={packageData?.minSdk} />\n          <NameValue name=\"Install Date:\" value={toDateTime(packageData?.firstInstallTime)} />\n        </Grid>\n        <Grid item xs={6}>\n          <NameValue name=\"Test Run Date:\" value={toDateTime(testRun?.date)} />\n          <NameValue name=\"Package Version:\" value={packageData?.name} />\n          <NameValue name=\"App Code:\" value={packageData?.code} />\n          <NameValue name=\"App Target Sdk:\" value={packageData?.targetSdk} />\n          <NameValue name=\"Last Update Date:\" value={toDateTime(packageData?.lastUpdateTime)} />\n        </Grid>\n      </Grid>\n\n      <Grid container spacing={3} style={{ marginBottom: 20 }}>\n        <Grid item xs={6}>\n          {test.devices?.map((device, index) => (\n            <NameValue\n              key={device.serial}\n              className={`${index + 1 !== test.devices.length ? 'noSeparator' : ''}`}\n              name={`${index === 0 ? 'Device (Recorded):' : ''}`}\n              value={deviceInfo(device)}\n            />\n          ))}\n        </Grid>\n        <Grid item xs={6}>\n          {testRun.devices?.map((device, index) => (\n            <NameValue\n              key={device.serial}\n              className={`${index + 1 !== testRun.devices.length ? 'noSeparator' : ''}`}\n              name={`${index === 0 ? 'Device (Executed):' : ''}`}\n              value={deviceInfo(device)}\n            />\n          ))}\n        </Grid>\n      </Grid>\n\n      <div\n        style={{\n          borderRadius: 4,\n          padding: 10,\n          background: testRun.wasSuccessful ? successGradient : errorGradient\n        }}\n      >\n        <Typography sx={{ fontSize: '1rem' }} variant=\"h6\">\n          {`${test.stepsCountWithSubTestSteps} steps: ${successSteps.length} successful / `}\n          <Typography component=\"span\" sx={stepsFailedStyle} variant=\"h6\" onClick={() => (failedSteps.length > 0 ? scrollToFailStep() : null)}>\n            {`${failedSteps.length}  failed`}\n          </Typography>\n        </Typography>\n\n        {isFailedTest && (\n          <Typography sx={{ fontSize: '1rem', whiteSpace: 'break-spaces' }} variant=\"h6\">\n            Status Message:{` ${failedSteps[0]?.message}`}\n          </Typography>\n        )}\n      </div>\n    </div>\n  )\n}\n","export default {\n  STORE_VERSION: 15,\n  TEST_FORMAT_VERSION: 8,\n  STORE_VERSION_KEY: 'db_store_version',\n  STORE_KEY: 'db_store'\n}\n\n/**\n * This is the root of our data store.\n * It holds all the business data as well as all the application UI state data (-> uiStore)\n * In the future all non-ui data should be synced to a server, so team collaborators can access the same tests\n */\nexport const ROOT_TREE_NODE_ID = 'ROOT_TREE_NODE_ID'\n//export const FIRST_TEST_BATCH_ID = 'DEFAULT_BATCH_ID'\n\nexport const DEFAULT_FOLDERS_SNAPSHOT = {\n  id: ROOT_TREE_NODE_ID,\n  title: 'All tests',\n  children: [{ id: 'default-node', title: 'Recorded tests', children: [] }] // create a single default folder\n}\n\nexport const BatchRunExportDataDirName = 'data'\n","import { Chip, Tooltip } from '@material-ui/core'\nimport { bg2 } from '../../../styles/colors'\n\ninterface Props {\n  name: string\n}\n\nfunction TagWidget(props: Props) {\n  const { name } = props\n\n  const tag = window.tagsMapping.find((t: any) => t.name === name)\n  const style = { backgroundColor: tag?.color || bg2, marginLeft: 8, height: 20 }\n  const chip = <Chip size=\"small\" label={name} style={style} />\n\n  return (\n    <span>\n      {/** @ts-ignore */}\n      <Tooltip title={tag?.description || ''}>{chip}</Tooltip>\n    </span>\n  )\n}\n\nexport default TagWidget\n","/* eslint-disable jsx-a11y/alt-text */\nimport { useRef, useState } from 'react'\nimport { defaultBg, secondary } from '../../../../styles/colors'\nimport { Step } from '../../types'\n\ninterface Props {\n  step: Step\n  src: string\n}\n\nexport const DrawWidget = ({ step, src }: Props) => {\n  const ref = useRef<any>(null)\n  const [size, setSize] = useState({ width: 500, height: 800 })\n\n  const getCoordinate = (cmd: string, point: { x: number; y: number }) => {\n    return `${cmd} ${size.width * point.x} ${size.height * point.y} `\n  }\n\n  const onImgLoad = (event: any) => {\n    const img = event.target\n    setSize({ width: img.offsetWidth, height: img.offsetHeight })\n  }\n\n  const points = step.mouseMoveCoordinates\n\n  let path = ''\n  let arrowTransform = ''\n  let longClickDot = null\n  let longClickDotBg = null\n\n  if (points.length > 1) {\n    path += getCoordinate('M', points[0])\n    for (let i = 1; i < points.length; i++) {\n      path += getCoordinate('L', points[i])\n    }\n    const firstPoint = points[0]\n    const lastPoint = points[points.length - 1]\n    let oneBefore = points[points.length - 2]\n\n    const dx = lastPoint.x - oneBefore.x\n    const dy = lastPoint.y - oneBefore.y\n    const deg = (Math.atan2(dy, dx) * 180) / Math.PI\n    arrowTransform = `translate(${size.width * lastPoint.x} ${size.height * lastPoint.y}) rotate(${deg} 0 0) translate(-2 -7)`\n\n    if (step.longClick) {\n      longClickDotBg = (\n        <circle cx={size.width * firstPoint.x} cy={size.height * firstPoint.y} r={10} stroke={defaultBg} fill={defaultBg} strokeWidth=\"10\" />\n      )\n      longClickDot = (\n        <circle cx={size.width * firstPoint.x} cy={size.height * firstPoint.y} r={10} stroke={secondary} fill={secondary} strokeWidth=\"2\" />\n      )\n    }\n  }\n\n  return (\n    <div ref={ref} style={{ position: 'relative', width: 'fit-content', height: 'fit-content', cursor: 'crosshair' }}>\n      <img style={{ maxWidth: '100%', maxHeight: '-webkit-fill-available' }} src={src} onLoad={onImgLoad} />\n      <svg\n        style={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '100%' }}\n        xmlns=\"https://www.w3.org/2000/svg\"\n        viewBox={`0 0 ${size.width} ${size.height}`}\n        preserveAspectRatio=\"none\"\n      >\n        {longClickDotBg}\n        <path strokeWidth=\"10\" stroke={defaultBg} fill=\"none\" strokeLinejoin=\"round\" strokeLinecap=\"round\" d={path} />\n        {arrowTransform && (\n          <polygon strokeWidth=\"10\" strokeLinecap=\"round\" points=\"2,7 0,0 11,7 0,14\" transform={arrowTransform} stroke={defaultBg} fill={defaultBg} />\n        )}\n\n        {longClickDot}\n        <path strokeWidth=\"2\" stroke={secondary} fill=\"none\" strokeLinejoin=\"round\" strokeLinecap=\"round\" d={path} />\n        {arrowTransform && (\n          <polygon strokeWidth=\"2\" strokeLinecap=\"round\" points=\"2,7 0,0 11,7 0,14\" transform={arrowTransform} stroke={secondary} fill={secondary} />\n        )}\n      </svg>\n    </div>\n  )\n}\n","import { useRef } from 'react'\nimport { CenterFocusWeak } from '@material-ui/icons'\nimport { secondary, invertedFont } from '../../../../styles/colors'\n\nexport const PositionSpot = (props: any) => {\n  const positionSource = props.positionSource\n  const point = positionSource.point\n  const containerRef = useRef(null)\n  const ref = useRef(null)\n\n  const x = point.x * 100 + '%'\n  const y = point.y * 100 + '%'\n\n  return (\n    <div\n      ref={containerRef}\n      style={{\n        position: 'relative',\n        height: '200px',\n        width: '200px',\n        backgroundColor: 'rgba(100,100,100)',\n        ...props.style\n      }}\n    >\n      {props.children}\n      <CenterFocusWeak\n        ref={ref}\n        style={{\n          color: invertedFont,\n          position: 'absolute',\n          width: 10,\n          height: 10,\n          padding: 20,\n          borderRadius: 35,\n          left: `calc(${x} - 5px)`,\n          top: `calc(${y} - 5px)`,\n          cursor: 'grabbing',\n          zIndex: 101,\n          backgroundColor: secondary\n        }}\n      />\n    </div>\n  )\n}\n","import { ArrowBack } from '@material-ui/icons'\nimport { secondary, transparentWhite } from '../../../../styles/colors'\nimport { Step } from '../../types'\n\ninterface Props {\n  step: Step\n}\n\nexport const AtoBline = ({ step }: Props) => {\n  const p1 = step.startPositionSource.point\n  const p2 = step.endPositionSource.point\n  const centerX = (p1.x + p2.x) / 2\n  const centerY = (p1.y + p2.y) / 2\n  const dx = p1.x - p2.x\n  const dy = p1.y - p2.y\n  const deg = (Math.atan2(dy, dx) * 180) / Math.PI\n\n  return (\n    <ArrowBack\n      style={{\n        position: 'absolute',\n        backgroundColor: transparentWhite,\n        color: secondary,\n        zIndex: 101,\n        top: `calc(${centerY * 100}% - 35px)`,\n        left: `calc(${centerX * 100}% - 35px)`,\n        width: 70,\n        height: 70,\n        padding: 20,\n        borderRadius: 35,\n        transform: `rotate(${deg}deg)`\n      }}\n    />\n  )\n}\n","/* eslint-disable jsx-a11y/alt-text */\nimport { DrawWidget } from './common/FreeDragLine'\nimport { PositionSpot } from './common/PositionSpot'\nimport { AtoBline } from './common/AtoBline'\n\nconst DragAndDrop = 'DragAndDrop'\nexport const DrawDragLine = (props: any) => {\n  const { src, step } = props\n\n  return (\n    <>\n      {step.dragType === DragAndDrop && <DrawWidget step={step} src={src} />}\n      {step.dragType !== DragAndDrop && (\n        <PositionSpot\n          style={{ position: 'relative', zIndex: 100, width: 'fit-content', height: 'fit-content' }}\n          positionSource={step.endPositionSource}\n        >\n          <PositionSpot\n            style={{ position: 'relative', zIndex: 100, width: 'fit-content', height: 'fit-content' }}\n            positionSource={step.startPositionSource}\n          >\n            <img style={{ maxWidth: '100%', maxHeight: '-webkit-fill-available' }} src={src} />\n          </PositionSpot>\n          <AtoBline step={step} />\n        </PositionSpot>\n      )}\n    </>\n  )\n}\n","import { matchColor, roiColor } from '../../../styles/colors'\nimport { Step } from '../types'\nimport { DrawDragLine } from './DrawDragLine'\n\nconst RectView = ({ match, opacity, style }: any) => {\n  let renderStyle: any = {\n    position: 'absolute',\n    fontSize: 9,\n    left: `${match?.position?.x * 100}%`,\n    top: `${match?.position?.y * 100}%`,\n    width: `${match?.size?.width * 100}%`,\n    height: `${match?.size?.height * 100}%`,\n    opacity: opacity ? opacity : 1,\n    border: `2px solid rgb(110,0,255)`,\n    outline: `2px solid ${matchColor}`\n  }\n\n  if (style) {\n    renderStyle = { ...renderStyle, ...style }\n  }\n\n  return <div style={renderStyle}>{/*p: {match.probability.toFixed(3)}*/}</div>\n}\n\nexport const ImageMatchView = (props: any) => {\n  const borderRadius = 5\n  const { matchIndex, matches, selection, roi, maxWidth, style, src, children, step, ...rest } = props\n\n  return (\n    <div\n      {...rest}\n      style={{\n        position: 'relative',\n        overflow: 'hidden',\n        maxWidth: maxWidth,\n        borderRadius,\n        ...style\n      }}\n    >\n      {step.type !== 'drag' && <img src={src} width=\"100%\" alt=\"ImageMatchView\" style={{ borderRadius, display: 'block' }} />}\n      {step.type === 'drag' && <DrawDragLine step={step as Step} src={src} />}\n\n      {matches && matches.length\n        ? matches.map((match: any, index: any) => <RectView key={index} match={match} opacity={index === matchIndex ? 1 : 0.25} />)\n        : selection && <RectView rect={selection} />}\n\n      {roi && (\n        <RectView\n          rect={roi}\n          style={{\n            color: roiColor\n            // border: `1px solid ${successLight}`,\n            // outline: '1000px solid #510000b5'\n          }}\n        />\n      )}\n      {children}\n    </div>\n  )\n}\n","import React from 'react'\nimport { superLight } from '../../../../styles/colors'\n\ninterface Props {\n  height?: string\n  top?: string\n  left?: string\n  showTip?: boolean\n}\n\nexport const VerticalLine = (props: Props) => {\n  const { height, showTip = true } = props\n  return (\n    <div\n      className=\"vl\"\n      style={{\n        borderRight: `2px solid ${superLight}`,\n        height: height || '30px'\n        // marginTop: '5px'\n      }}\n    >\n      {showTip && (\n        <div\n          className=\"point\"\n          style={{\n            position: 'absolute',\n            borderTop: `12px solid ${superLight}`,\n            borderRight: '8px solid transparent',\n            borderLeft: '8px solid transparent',\n            marginLeft: '-7px',\n            top: '100%'\n          }}\n        ></div>\n      )}\n    </div>\n  )\n}\n","/* eslint-disable jsx-a11y/alt-text */\n// @ts-check\nimport { Avatar, CardHeader, Typography } from '@mui/material'\nimport React from 'react'\nimport { BatchRunExportDataDirName } from '../../../config'\nimport { errorGradient, errorMedium, errorWarm, success, successFont, successGradient, superLight, turmeric } from '../../../styles/colors'\nimport { Step, StepResult, Test, TestRun } from '../types'\nimport { formatDateTime, formatUserfacingTestId as formatId, getStepInfo } from '../../../lib/StringUtils'\nimport TagWidget from './TagWidget'\nimport { ImageMatchView } from './ImageMatchView'\nimport { VerticalLine } from './common'\n\nconst DeviceOrientation = {\n  portrait: 0,\n  landscape: 1,\n  upsideDown: 2,\n  seascape: 3\n}\n\ninterface Props {\n  test: Test\n  testRun: TestRun\n  refTestRun: TestRun | undefined\n  index: number\n  step: Step\n  stepResult: StepResult\n  referenceSResult: StepResult | null\n  refList: React.RefObject<HTMLImageElement>[]\n  failStepRef: React.MutableRefObject<null>\n  baseSrc?: string // contains absolute path in case of repeato studio\n}\n\nconst stepType = {\n  fontSize: '0.7rem',\n  color: 'rgba(0, 0, 0, 0.6)'\n}\nconst stepImageIcon: React.CSSProperties = {\n  width: 'auto',\n  maxHeight: '3rem'\n  // margin: '11px'\n}\n\nconst hBox: any = (org = true) => {\n  return {\n    position: 'absolute',\n    bottom: 0,\n    textAlign: 'center',\n    width: '100%',\n    borderRadius: '0 0 4px 4px'\n  }\n}\n\nconst lBox: any = (org = true) => {\n  return {\n    position: 'absolute',\n    width: '600px',\n    bottom: org ? '200px' : '0'\n  }\n}\nconst formatPercentage = (value: string) => {\n  const valueNum = parseFloat(value)\n  return `${(valueNum * 100).toFixed(2)}%`\n}\n\nconst pStep = (step: Step, stepName: string) => (\n  <React.Fragment>\n    <span>{stepName}</span>\n    {step.type !== 'comment' && <span style={stepType}>{` ID: ${formatId(step?.id)}`}</span>}\n  </React.Fragment>\n)\n\nconst stepImage = (test: Test, name: string, style: React.CSSProperties) => (\n  <React.Fragment>\n    <img style={style} src={name} alt={test.id} />\n  </React.Fragment>\n)\n\n// arrows to point out towards the next step\nconst getArrows = (testRun: TestRun, index: number) => {\n  const nextStep = testRun.stepResults[index]\n  if (!nextStep) return\n  // const step = stepResults[index - 1]\n  return <VerticalLine height=\"30px\" />\n}\n\nexport const StepsItem = (props: Props) => {\n  const { test, testRun, index, step, refList, stepResult, referenceSResult, failStepRef, refTestRun, baseSrc: bSrc } = props\n  const [isDiffBatchHovered, setDiffBatchHovered] = React.useState(false)\n  const [isDiffViewHovered, setDiffViewHovered] = React.useState(false)\n  const baseSrc = bSrc ? `file://${bSrc}` : `./${BatchRunExportDataDirName}/${test.id}`\n  const trBaseSrc = `testRuns/${testRun.id}`\n\n  const stepName = getStepInfo(step as Step, 'all', false)\n  const isSuccess = stepResult?.success\n  const ref: React.RefObject<HTMLImageElement> = React.createRef()\n  const isCopy = stepResult?.copy\n  const border = `0px solid ${!isSuccess ? errorWarm : turmeric}`\n  const similarityWarnThreshold = Number(test?.similarityWarnThreshold || '0.00')\n  console.log('TestRunDevices', JSON.stringify(testRun), JSON.stringify(stepResult))\n  const deviceData = testRun.devices.find(d => d.serial === stepResult.executedOn)\n  const executionSkipped = step.type === 'comment' // we don't excute for comment step\n  let isLandscape = deviceData?.currentRotation === DeviceOrientation.landscape || deviceData?.currentRotation === DeviceOrientation.seascape\n  isLandscape = !deviceData ? false : isLandscape // in case of switch step we might not have deviceData if device was not attached then assume false\n  console.log('deviceData', JSON.stringify(deviceData), isLandscape)\n\n  refList.push(ref)\n\n  let orgFrameSrc = step?.originalFrame && `${baseSrc}/${step?.originalFrame}`\n  if (referenceSResult) {\n    orgFrameSrc = `${baseSrc}/${`testRuns/${refTestRun?.id}/` + referenceSResult.screenshot}`\n  }\n\n  const screenshotSrc = stepResult?.screenshot && `${baseSrc}/${trBaseSrc}/${stepResult?.screenshot}`\n\n  // data to show on image hover\n  const stepHoverDetail = (type: string, isLandscape = true) => {\n    const isOriginal = type === 'org'\n    const stepColor = stepResult?.success ? success : errorWarm // success in case if test passed\n    const backgroundColor = isOriginal ? success : stepColor // original screenshot will always be success\n    const lStyleType = isOriginal ? !!stepResult?.screenshot : false // landscape box positioning if testRun screenshot exist\n    const hStyleType = isOriginal ? true : !step?.originalFrame // horizontal box left right prop if original screenshot exist\n    const text = isOriginal ? (referenceSResult ? 'Reference Test Run' : 'Original') : 'Test Run'\n    const date =\n      isOriginal && !referenceSResult ? step?.createdOn : referenceSResult && isOriginal ? referenceSResult.createdOn : stepResult?.createdOn\n    const boxStyle = isLandscape ? lBox(lStyleType) : hBox(hStyleType) // horizontal box or landscape box\n    // const typoStyle = isLandscape ? lTypoStyle : hTypoStyle // horizontal typo or landscape\n\n    return (\n      <div className=\"info\" style={{ ...boxStyle, backgroundColor, paddingTop: 10, height: 55 }}>\n        <Typography variant=\"body1\">{text} Screenshot</Typography>\n        <Typography variant=\"body2\">{formatDateTime(new Date(date))}</Typography>\n      </div>\n    )\n  }\n\n  const renderResult = (src: string | undefined, type: string) => {\n    //const { roi } = calculateRoi(step as Step)\n    if (!src) return placeHolder(type)\n\n    let matches = type === 'org' ? step?.matches : stepResult?.matches\n    if (referenceSResult) {\n      matches = referenceSResult.matches\n    }\n\n    return (\n      <div className=\"matchResult\" style={{ flexBasis: '50%', position: 'relative' }}>\n        <ImageMatchView\n          matchIndex={step?.matchIndex}\n          matches={matches}\n          selection={step?.selection}\n          roi={step?.region}\n          width={200}\n          src={src}\n          step={step}\n        />\n\n        {stepHoverDetail(type, false)}\n      </div>\n    )\n  }\n\n  const placeHolder = (type: any) => {\n    return (\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          flexGrow: 1,\n          position: 'relative',\n          backgroundColor: superLight,\n          borderRadius: 4,\n          minHeight: 300\n        }}\n      >\n        <Typography>Not available</Typography>\n        {stepHoverDetail(type, false)}\n      </div>\n    )\n  }\n\n  const MaxSize = 600\n\n  return (\n    <>\n      <div\n        className=\"stepWrapper\"\n        ref={!isCopy && !isSuccess ? failStepRef : null}\n        style={{\n          minWidth: MaxSize,\n          maxWidth: MaxSize,\n          border: isCopy ? '' : border\n        }}\n      >\n        <CardHeader\n          avatar={\n            (!executionSkipped && (\n              <Avatar style={{ backgroundColor: isSuccess ? success : errorWarm }} aria-label=\"step-no\">\n                {stepName.icon && <stepName.icon />}\n              </Avatar>\n            )) || <p></p>\n          }\n          title={pStep(step as Step, stepName.primary)}\n          subheader={\n            <>\n              <span style={{ whiteSpace: 'pre-wrap', overflow: 'hidden' }}>{stepName.secondary}</span>\n              {step?.tags?.map((tag: any, index: number) => (\n                <TagWidget name={tag} key={index} />\n              ))}\n            </>\n          }\n          action={step?.image && <>{stepImage(test, `${baseSrc}/${step?.image}`, stepImageIcon)}</>}\n          style={{}}\n        />\n\n        <div\n          style={{\n            borderBottom: '2px solid ' + superLight\n          }}\n        >\n          <div\n            style={{\n              position: 'relative',\n\n              paddingBottom: 20\n            }}\n          >\n            {!executionSkipped && (\n              <div style={{ display: 'flex', flexDirection: isLandscape ? 'column' : 'row' }}>\n                {renderResult(orgFrameSrc, 'org')}\n                <div style={{ height: 10, width: 10 }}></div>\n                {renderResult(screenshotSrc, 'testRun')}\n              </div>\n            )}\n\n            {stepResult?.screenSimilarity && (\n              <>\n                <div style={{ position: 'absolute', bottom: 0, width: '100%', height: 100, overflow: 'hidden' }}>\n                  <div\n                    className={`similarityBatch ${Number(stepResult?.screenSimilarity) > similarityWarnThreshold ? 'above' : 'below'}`}\n                    onMouseEnter={event => setDiffBatchHovered(true)}\n                    onMouseLeave={event => setDiffBatchHovered(false)}\n                  >\n                    <Typography variant=\"body1\">{formatPercentage(stepResult?.screenSimilarity)}</Typography>\n                    <Typography variant=\"body2\">Screen Similarity</Typography>\n                  </div>\n                </div>\n                {(isDiffBatchHovered || isDiffViewHovered) && orgFrameSrc && screenshotSrc && (\n                  <div\n                    onMouseEnter={event => setDiffViewHovered(true)}\n                    onMouseLeave={event => setDiffViewHovered(false)}\n                    className=\"diffImg\"\n                    style={{\n                      width: MaxSize,\n                      height: MaxSize,\n                      position: 'absolute',\n                      justifyContent: 'center',\n                      alignItems: 'center',\n                      display: 'flex',\n                      backgroundColor: '#FFF',\n                      boxShadow: '0px 2px 28px #00000057',\n                      borderRadius: 5,\n                      top: 0\n                    }}\n                  >\n                    <img\n                      src={orgFrameSrc}\n                      style={{ position: 'absolute', maxHeight: MaxSize, maxWidth: MaxSize, boxShadow: '0px 2px 28px #00000057' }}\n                    />\n                    <img src={screenshotSrc} style={{ position: 'absolute', maxHeight: MaxSize, maxWidth: MaxSize, mixBlendMode: 'difference' }} />\n                  </div>\n                )}\n              </>\n            )}\n          </div>\n          {stepResult?.message && (\n            <div\n              style={{\n                borderRadius: 4,\n                padding: 10,\n                background: isSuccess ? successGradient : errorGradient,\n                marginBottom: 20\n              }}\n            >\n              <Typography variant=\"body2\" sx={{ color: isSuccess ? successFont : errorMedium, whiteSpace: 'pre-wrap', fontFamily: 'monospace' }}>\n                {stepResult?.message}\n              </Typography>\n            </div>\n          )}\n        </div>\n\n        {/* <CardActions disableSpacing></CardActions> */}\n      </div>\n\n      {getArrows(testRun, index + 1)}\n    </>\n  )\n}\n","import { Box } from '@mui/material'\nimport React from 'react'\nimport { Step, StepResult, Test } from '../types'\nimport { StepsItem } from './StepItem'\n\ninterface Props {\n  test: Test\n  failStepRef: React.MutableRefObject<null>\n  baseSrc?: string // repeato studio sends the absolute path\n}\n\nconst stepBox: any = {\n  display: 'flex',\n  flexDirection: 'column',\n  mt: '10px',\n  justifyContent: 'center',\n  alignItems: 'center',\n  position: 'relative'\n}\n\n// const lTypoStyle: any = {\n//   text: { p: 1, float: 'left' },\n//   date: { p: 1, float: 'right' }\n// }\n// const hTypoStyle: any = {\n//   text: { pt: 1 },\n//   date: { pb: 1 }\n// }\n\nexport const StepsInfo = (props: Props) => {\n  const { test, failStepRef, baseSrc } = props\n  const testRun = test?.testRuns[test?.testRuns.length - 1]\n  console.log('TestRun', test?.testRuns.length - 1, JSON.stringify(test.testRuns))\n  const refTestRun = test?.testRuns.find(\n    (tr, i) => tr.wasSuccessful && tr.stepResults.length && test.testRuns.length !== i + 1 /**&& tr.devices[0]?.serial === test.devices[0]?.serial*/\n  )\n\n  if (!testRun) {\n    return null\n  }\n\n  const stepResults = [...testRun?.stepResults] // as we are updating stepResults later so to avoid updating original data\n\n  const refList: React.RefObject<HTMLImageElement>[] = []\n\n  let currSResult: StepResult | null = null\n  let referenceSResult: StepResult | null = null\n  let currStep: Step | null = null\n\n    // verify if there are any missing steps due to failed step\n  ;(() => {\n    const stepsCount = test?.steps?.length\n    const stepRunsCount = stepResults?.length\n    const missingStepRuns = stepsCount - stepRunsCount\n\n    // copy the original steps to stepResults for rendering\n    if (missingStepRuns > 0) {\n      const startCopyFrom = stepsCount - missingStepRuns\n\n      for (let i = startCopyFrom; i < stepsCount; i++) {\n        // console.log('CopyingStep', test?.steps[i]);\n        stepResults[i] = {} as any\n        stepResults[i].step = test?.steps[i]\n        stepResults[i].success = false\n        stepResults[i].copy = true // just to keep record it's copied step\n      }\n    }\n  })()\n\n  return (\n    <>\n      {stepResults.length &&\n        stepResults.map((sResult, index: number) => {\n          const opacity = sResult?.copy ? '0.5' : '1'\n          currSResult = sResult\n          referenceSResult = refTestRun?.stepResults?.find(refSr => refSr.step.id === currSResult?.step.id) || null\n          currStep = sResult.step\n\n          if (currStep.type === 'subTest') return null // this is an extra step recieving from repeato studio so skip it\n\n          return (\n            <Box className=\"stepCard\" sx={{ ...stepBox, opacity }} key={index}>\n              <StepsItem\n                failStepRef={failStepRef}\n                test={test}\n                refList={refList}\n                step={currStep}\n                stepResult={currSResult}\n                referenceSResult={referenceSResult}\n                refTestRun={refTestRun}\n                testRun={testRun}\n                index={index}\n                baseSrc={baseSrc}\n              />\n            </Box>\n          )\n        })}\n    </>\n  )\n}\n","import * as React from 'react'\nimport ListIcon from '@material-ui/icons/List'\nimport { Avatar } from '@material-ui/core'\nimport { Test } from '../types'\nimport { success, bg2, errorWarm } from '../../../styles/colors'\nimport { BatchRunExportDataDirName } from '../../../config'\n\ninterface TestIconProps {\n  test: Test\n}\n\nexport const TestIcon = (props: TestIconProps) => {\n  const { test } = props\n\n  const baseSrc = `./${BatchRunExportDataDirName}/${test.id}`\n  const avatarStyle = { width: 18, height: 18 }\n  const testRun = test?.testRuns[test?.testRuns.length - 1]\n  const bg = testRun ? (testRun.wasSuccessful ? success : errorWarm) : bg2\n  const stepsWithImage = test.steps.filter(step => Boolean(step.image))\n  const icon = <ListIcon />\n\n  let avatarSrc = ''\n\n  if (stepsWithImage.length > 0) {\n    const lastStep = stepsWithImage[stepsWithImage.length - 1]\n    avatarSrc = `${baseSrc}/${lastStep.originalFrame}`\n  }\n\n  const avatar = (\n    <Avatar src={avatarSrc} style={avatarStyle}>\n      {icon}\n    </Avatar>\n  )\n\n  return (\n    <div className=\"stack-container\">\n      <div style={{ borderRadius: '50%', border: `2px solid ${bg}` }}>{avatar}</div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { IconButton } from '@mui/material'\nimport { StepsInfo, TestInfo } from './'\nimport { Test } from '../types'\nimport { Close } from '@material-ui/icons'\nimport { transparentWhite } from '../../../styles/colors'\nimport { useNavigate, useParams } from 'react-router'\n\ninterface Props {\n  setActiveTab: React.Dispatch<React.SetStateAction<number | null>>\n}\n\nexport const TestView = ({ setActiveTab }: Props) => {\n  const { testId, testIndex = 0 } = useParams()\n  const navigate = useNavigate()\n\n  const tests = batchRun.tests || []\n  const failStepRef = React.useRef(null)\n  const [test, setTest] = React.useState<Test | undefined>(undefined)\n\n  React.useEffect(() => setActiveTab(Number(testIndex)), [])\n\n  // we are not using testIndex to filter anymore because index can be changed when perform searching/filters\n  // testIds can be same if test is added multiple times in batch but for now report get overwritten by last testRun if test is same\n  // so for now filtering by test id works fine, but in case more support is added for same tests\n  // then we might introduce testRun date or any other unique field to identify tests uniquely\n  React.useEffect(() => setTest(tests.find(t => t.id === testId) as any), [testId]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <>\n      <IconButton\n        id=\"closeButton\"\n        style={{ position: 'fixed', right: 30, top: 40, backgroundColor: transparentWhite, zIndex: 100 }}\n        onClick={() => {\n          setActiveTab(null)\n          navigate('/')\n        }}\n      >\n        <Close />\n      </IconButton>\n\n      {test && (\n        <div id=\"scrollContainer\" style={{ flexGrow: 1, overflow: 'scroll', padding: 40 }}>\n          <TestInfo test={test} failStepRef={failStepRef} />\n          <StepsInfo test={test} failStepRef={failStepRef} />\n        </div>\n      )}\n      {!test && <p>Test not found!</p>}\n    </>\n  )\n}\n","import React from 'react'\nimport { Route, Routes } from 'react-router-dom'\nimport './App.css'\nimport { createTheme } from '@material-ui/core'\nimport { darkBg, darkBg2, lighterFont, lightestFont, secondary } from '../../styles/colors'\nimport { ThemeProvider } from '@mui/material'\nimport { Sidebar, TestView } from './components'\n\nconst commonThemeProps = {\n  typography: {\n    h1: {\n      fontSize: '1.7rem',\n      fontWeight: 400\n    },\n    h2: {\n      fontSize: '1.2rem',\n      fontWeight: 400\n    },\n    h3: {\n      fontSize: '0.8rem',\n      fontWeight: 400,\n      color: darkBg2,\n      marginBottom: 3\n    },\n    h4: {\n      fontSize: '0.7rem',\n      fontWeight: 400\n    },\n    h5: {\n      fontSize: '0.5rem',\n      fontWeight: 400\n    },\n    h6: {\n      // dialog title\n      fontSize: '1.2rem',\n      fontWeight: 400\n    },\n    caption: {\n      // dialog title\n      color: '#999999',\n      fontSize: '0.7rem'\n    },\n    body1: {\n      fontWeight: 400\n    },\n    body2: {\n      fontSize: '0.7rem',\n      fontWeight: 400\n    },\n    subtitle1: {\n      // why does this not work?\n      fontWeight: 400\n    }\n  }\n}\n\nconst darkTheme = createTheme({\n  ...commonThemeProps,\n  palette: {\n    type: 'dark',\n    primary: {\n      main: darkBg\n    },\n    secondary: {\n      main: secondary\n    }\n  }\n})\n\nconst brightTheme = createTheme({\n  ...commonThemeProps,\n  palette: {\n    type: 'light',\n    text: {\n      primary: lighterFont,\n      secondary: lightestFont\n    },\n    primary: {\n      main: darkBg\n    },\n    secondary: {\n      main: secondary\n    }\n  }\n})\nbrightTheme.typography.h1.color = darkBg\nbrightTheme.typography.h2.color = darkBg\n\nfunction App() {\n  const [activeTab, setActiveTab] = React.useState<number | null>(null) // using index number for selected test - can't used test.id as test can be duplicated in single batch\n\n  // verify the report data is valid or not\n  const verifyReportData = () => {\n    try {\n      if (!batchRun?.id || !batchRun?.tests) {\n        alert('Invalid data OR Report file.')\n        return\n      }\n    } catch (error) {\n      alert('Invalid data OR Report file.')\n    }\n  }\n\n  React.useEffect(() => {\n    verifyReportData()\n  }, [])\n\n  return (\n    <>\n      <ThemeProvider theme={darkTheme}>\n        <Sidebar activeTab={activeTab} setActiveTab={setActiveTab} />\n      </ThemeProvider>\n\n      <ThemeProvider theme={brightTheme}>\n        <Routes>\n          <Route path=\"/\" element={<></>} />\n          <Route path=\"/test/:testIndex/:testId\" element={<TestView setActiveTab={setActiveTab} />} />\n        </Routes>\n      </ThemeProvider>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { HashRouter } from 'react-router-dom'\nimport './index.css'\nimport App from './App'\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}