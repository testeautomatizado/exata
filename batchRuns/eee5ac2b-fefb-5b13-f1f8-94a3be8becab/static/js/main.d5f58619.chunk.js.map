{"version":3,"sources":["../../styles/colors.js","../../icons/CommandLineIcon.js","../../icons/LandingIcon.js","../../icons/StartIcon.js","../../utils/compose.js","../../components/widgets/TagWidget.js","../../lib/constants.js","../../lib/StepUtils.js","../../lib/StringUtils.js","components/NameValue.tsx","components/Sidebar.tsx","components/TestInfo.tsx","../../config.js","components/TagWidget.tsx","components/common/FreeDragLine.tsx","components/common/PositionSpot.tsx","components/common/AtoBline.tsx","components/DrawDragLine.tsx","components/ImageMatchView.tsx","components/common/VerticalLine.tsx","components/StepItem.tsx","components/StepsInfo.tsx","components/TestIcon.tsx","components/TestView.tsx","App.tsx","index.tsx"],"names":["darkBg","darkBg2","logoColor","secondary","bg2","defaultBg","transparentWhite","superLight","errorWarm","errorGradient","successGradient","success","concat","StartIcon","props","_jsx","SvgIcon","children","_jsxs","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","x1","y1","x2","y2","LandingIcon","d","compose","_len","arguments","length","fns","Array","_key","reduce","a","b","enhance","withStyles","styles","tag","marginRight","inject","observer","classes","name","dbStore","fallbackColor","getTagByName","style","backgroundColor","color","onClick","cursor","chip","Chip","size","label","className","description","Tooltip","title","Directions","firstDragPoint","step","_step$mouseMoveCoordi","_step$startPositionSo","mouseMoveCoordinates","dragType","startPositionSource","point","lastDragPoint","_step$mouseMoveCoordi2","_step$endPositionSour","endPositionSource","infoStringY","y","toFixed","infoStringX","x","verticalDragDirection","horizontalDragDirection","isHorizontalDrag","horizontalDirection","verticalDirection","Math","abs","dragAndDropGuess","_step$mouseMoveCoordi3","longClick","minX","maxX","minY","maxY","forEach","p","dragDirection","isHorizontal","ScanTextOperators","contains","id","js","equals","notContains","greaterThan","lessThan","formatUserfacingTestId","testId","substr","toUpperCase","min2Digits","number","msToTime","duration","seconds","floor","minutes","hours","toDateTime","date","dateObj","Date","isNaN","getDate","toLocaleDateString","toLocaleTimeString","formatDateTime","getScanTextLabel","_ScanTextOperators$st","scanTextLabel","operator","separatorStyle","borderBottom","marginBottom","paddingBottom","h3Style","fontSize","fontWeight","NameValue","value","val","Boolean","Typography","variant","ariaLabel","Metrics","appStartupDuration","skippedFramesCount","typoStyle","lineHeight","listItemStyle","paddingRight","paddingLeft","CssTextField","root","borderBottomColor","TextField","CssSelect","Select","renderTestResultRows","test","index","metric","maxValue","testRuns","_Fragment","map","tr","TestResultRow","testRun","formatedValue","percentage","delta","days","formatDuration","display","flexDirection","component","flexGrow","alignItems","background","wasSuccessful","Sidebar","_ref","_batchRun$stats","_batchRun$stats2","_batchRun$stats3","_batchRun$stats4","_batchRun$tests","_batchRun","_batchRun$stats5","_batchRun$stats6","activeTab","setActiveTab","navigate","useNavigate","values","setValues","React","searchKey","filter","currentMetric","tests","setTests","batchRun","maxMetricValue","fieldName","Number","MIN_VALUE","t","max","getMaxValue","defaultTest","search","toLowerCase","filteredTests","_test$id","_test$title","includes","devices","some","_d$name","lastTestRun","steps","stepResults","onChange","e","target","successPercentage","stats","successCount","totalCount","flexBasis","padding","overflow","window","open","src","alt","maxWidth","position","cx","cy","r","strokeDasharray","strokeDashoffset","justifyContent","top","sx","failCount","createdOn","stepsCount","version","placeholder","inputProps","MenuItem","Object","keys","List","disablePadding","paddingTop","ListItem","button","divider","ListItemIcon","minWidth","TestIcon","ListItemText","primary","formatId","ArrowForwardIos","opacity","flex","deviceInfo","deviceData","os","osVersion","TestInfo","_test$devices","_testRun$devices","_failedSteps$","failStepRef","console","info","table","packageData","appVersions","successSteps","result","failedSteps","isFailedTest","scrollToFailStep","useCallback","current","scrollIntoView","behavior","block","useEffect","scrollContainer","document","getElementById","setTimeout","scrollTo","left","stepsFailedStyle","textDecoration","marginTop","Grid","container","spacing","item","xs","packageName","minSdk","firstInstallTime","code","targetSdk","lastUpdateTime","device","serial","borderRadius","stepsCountWithSubTestSteps","whiteSpace","message","BatchRunExportDataDirName","TagWidget","tagsMapping","find","marginLeft","DrawWidget","ref","useRef","setSize","useState","getCoordinate","cmd","path","arrowTransform","longClickDot","longClickDotBg","i","firstPoint","lastPoint","oneBefore","dx","dy","deg","atan2","PI","maxHeight","onLoad","event","img","offsetWidth","offsetHeight","preserveAspectRatio","transform","PositionSpot","positionSource","containerRef","CenterFocusWeak","zIndex","AtoBline","p1","p2","centerX","centerY","ArrowBack","DragAndDrop","DrawDragLine","RectView","_match$position","_match$position2","_match$size","_match$size2","match","renderStyle","border","outline","ImageMatchView","matchIndex","matches","selection","roi","rest","type","rect","VerticalLine","showTip","borderRight","borderTop","borderLeft","stepType","stepImageIcon","lBox","org","undefined","bottom","formatPercentage","valueNum","parseFloat","pStep","stepName","Fragment","stepImage","getArrows","StepsItem","_step$tags","refList","stepResult","referenceSResult","refTestRun","baseSrc","bSrc","isDiffBatchHovered","setDiffBatchHovered","isDiffViewHovered","setDiffViewHovered","trBaseSrc","_step$point","_step$point2","tagWidget","start","end","sDrop","iconDrop","pDrop","stopOnFingerprintFound","ArrowForward","ArrowDownward","ArrowUpward","textLabel","actions","clearText","push","text","join","allSteps","click","icon","TouchApp","cmdLineIcon","comment","drag","waitForTemplate","HourglassEmpty","waitForDuration","subtype","waitForKeyboard","TextFields","scanText","home","Home","back","KeyboardBackspace","appSwitch","FilterNone","templateAssertion","Search","someContentAssertion","someContentClick","xyClick","startApp","iosBundleId","switchDevice","MobileScreenShare","roleName","deviceName","stopApp","execScript","CommandLineIcon","language","script","subTest","scanTextAssertion","assertionJs","searchText","scanTextClick","scanTextWait","noDesc","stepText","optional","tags","getStepInfo","isSuccess","createRef","isCopy","copy","similarityWarnThreshold","log","JSON","stringify","executedOn","executionSkipped","isLandscape","currentRotation","rotationVars","landscape","seascape","orgFrameSrc","originalFrame","screenshot","screenshotSrc","stepHoverDetail","isOriginal","stepColor","lStyleType","boxStyle","textAlign","renderResult","placeHolder","region","minHeight","MaxSize","CardHeader","avatar","Avatar","subheader","action","image","screenSimilarity","onMouseEnter","onMouseLeave","boxShadow","mixBlendMode","fontFamily","stepBox","mt","StepsInfo","currSResult","currStep","_test$steps","missingStepRuns","sResult","_refTestRun$stepResul","refSr","_currSResult","Box","bg","stepsWithImage","ListIcon","avatarSrc","lastStep","TestView","testIndex","useParams","setTest","IconButton","right","Close","commonThemeProps","typography","h1","h2","h3","h4","h5","h6","caption","body1","body2","subtitle1","darkTheme","createTheme","palette","main","brightTheme","App","verifyReportData","_batchRun2","alert","error","ThemeProvider","theme","Routes","Route","element","ReactDOM","render","StrictMode","HashRouter"],"mappings":"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","file":"static/js/main.d5f58619.chunk.js","sourcesContent":["export const logoBg = '#0a2836'\nexport const darkBg = '#1e4158'\nexport const defaultFont = '#3e3e3e'\nexport const darkBg2 = '#7692a4'\nexport const logoColor = '#10a4da'\nexport const secondary = logoColor\nexport const secondaryBg = '#223d4a'\nexport const deviceMirrorBg = 'rgb(221, 241, 241)'\nexport const bg2 = '#f5f5f5'\nexport const defaultBg = '#FFFFFF'\nexport const invertedFont = '#FFFFFF'\nexport const transparentWhite = 'rgba(255, 255, 255, 0.36)'\nexport const lighterFont = '#60626b'\nexport const lightestFont = '#b4b4b4'\nexport const superLight = '#d7d7d7'\nexport const error = '#f44336'\nexport const errorMedium = '#c93e33'\nexport const errorWarm = '#ff7a59'\nexport const darkErrorFont = '#3a0202'\nexport const errorLight = 'rgb(230, 167, 162)'\nexport const errorGradient = 'linear-gradient(315deg, rgba(255,167,167,1) 0%, rgba(255,221,173,1) 100%)'\nexport const successGradient = 'linear-gradient(315deg, rgba(174,213,129,1) 0%, rgba(249,255,178,1) 100%)'\nexport const feedbackGradient = `linear-gradient(315deg, rgba(3,98,160,1) 0%, ${logoColor} 100%)`\nexport const warning = '#ffb222'\nexport const warningLight = '#f5e49c'\nexport const success = '#AED581'\nexport const successFont = '#577633'\nexport const successLight = '#CDEFA6'\nexport const matchColor = '#ff00ff'\nexport const turmeric = '#c8d051'\nexport const transparentBlack = '#0000009e'\nexport const roiColor = successLight\nexport const tagColors = [\n  '#D4CD7F',\n  '#EBE5BE',\n  '#58A289',\n  '#AECFC5',\n  '#5497A0',\n  '#A9CED5',\n  '#8892B6',\n  '#C1C7D5',\n  '#DDD5C2',\n  '#E9E7DD',\n  '#AFA695',\n  '#D5D1CC',\n  '#E5A09B',\n  '#F2D0D2',\n  '#FA7A89',\n  '#F4BDC3',\n  '#EE7E96',\n  '#F4BED0',\n  '#CE899E',\n  '#E6BECC'\n]\n\nexport const menuColors = ['#EE7E96', '#E5A09B', '#f5e49c', '#8892B6', '#5497A0', '#58A289']\n","import React from 'react'\nimport { SvgIcon } from '@material-ui/core'\n\nfunction StartIcon(props) {\n  return (\n    <SvgIcon {...props}>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      >\n        <polyline points=\"4 17 10 11 4 5\" />\n        <line x1=\"12\" y1=\"19\" x2=\"20\" y2=\"19\" />\n      </svg>\n    </SvgIcon>\n  )\n}\n\nexport default StartIcon\n","import React from 'react'\nimport { SvgIcon } from '@material-ui/core'\n\nfunction LandingIcon(props) {\n  return (\n    <SvgIcon {...props}>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"-10 00 500 500\">\n        <path d=\"M45.989,97.409l-21.813,20.555L5.447,98.089l21.814-20.555L45.989,97.409z\" />\n        <path d=\"M125.485,22.498l-21.811,20.553L84.946,23.176l21.811-20.553L125.485,22.498z\" />\n        <path\n          d=\"M226.65,375.628c12.448,13.211,27.011,24.125,43.031,32.564l130.95-123.396c-7.475-16.492-17.504-31.677-29.954-44.889\n\tL240.007,101.237L95.979,236.956L226.65,375.628z M177.163,252.123l73.166-68.944l48.935,51.931\n\tc18.796,19.946,17.86,51.464-2.086,70.26l-0.819,0.771c-19.946,18.796-51.464,17.858-70.26-2.087L177.163,252.123z\"\n        />\n        <path\n          d=\"M385.073,426.421l22.159-3.438l4.746-21.916c6.283-29.011,5.858-58.136-0.671-85.148L300.118,420.694\n\tC326.692,428.818,355.74,430.972,385.073,426.421z\"\n        />\n        <path\n          d=\"M275.803,284.328l0.819-0.772c7.92-7.463,8.289-19.973,0.828-27.891l-28.381-30.118l-29.538,27.833l28.381,30.118\n\tC255.374,291.417,267.885,291.788,275.803,284.328z\"\n        />\n        <path d=\"M162.857,351.635L53.609,235.697l-40.103,37.789l87.059,92.389L162.857,351.635z\" />\n        <path d=\"M281.367,21.079l-40.103,37.789l109.249,115.938l17.913-61.336L281.367,21.079z\" />\n        <path\n          d=\"M156.518,55.431L135.47,33.094l-21.811,20.553l18.434,19.562l-17.937,16.901L67.01,40.077L45.196,60.632l47.146,50.033\n\tl-17.936,16.901l-18.434-19.562L34.16,128.56l21.048,22.337l18.529,65.835l147.4-138.897L156.518,55.431z\"\n        />\n      </svg>\n    </SvgIcon>\n  )\n}\n\nexport default LandingIcon\n","import React from 'react'\nimport { SvgIcon } from '@material-ui/core'\n\nfunction StartIcon(props) {\n  return (\n    <SvgIcon {...props}>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"-60 00 500 500\">\n        <path d=\"m223.652344 484.691406h29.972656v27.308594h-29.972656zm0 0\" />\n        <path d=\"m114.421875 484.691406h29.96875v27.308594h-29.96875zm0 0\" />\n        <path d=\"m282.972656 158.308594c0-18.152344-3.113281-36.082032-8.984375-53.210938h-179.929687c-5.871094 17.128906-8.984375 35.058594-8.984375 53.210938v190.539062h197.898437zm-48.683594 123.824218h-100.53125v-71.355468c0-27.40625 22.296876-49.703125 49.703126-49.703125h1.125c27.40625 0 49.703124 22.296875 49.703124 49.703125zm0 0\" />\n        <path d=\"m202.507812 12.695312-18.484374-12.695312-18.484376 12.695312c-24.46875 16.804688-44.132812 38.292969-57.90625 62.429688h152.777344c-13.769531-24.136719-33.433594-45.625-57.902344-62.429688zm0 0\" />\n        <path d=\"m184.585938 191.046875h-1.125c-10.882813 0-19.730469 8.851563-19.730469 19.730469v41.382812h40.585937v-41.382812c0-10.878906-8.851562-19.730469-19.730468-19.730469zm0 0\" />\n        <path d=\"m312.945312 219.519531v159.300781h55.101563v-126.945312zm0 0\" />\n        <path d=\"m0 378.820312h55.101562v-159.300781l-55.101562 32.355469zm0 0\" />\n        <path d=\"m114.421875 439.441406v30.691406h29.96875v-26.878906h24.644531v68.746094h29.972656v-68.746094h24.644532v26.878906h29.972656v-30.691406l31.664062-60.621094h-202.53125zm0 0\" />\n      </svg>\n    </SvgIcon>\n  )\n}\n\nexport default StartIcon\n","/*\n * takes an unlimited amount of functions as arguments and composes them to a single function\n * which, when called, calls each one in order with the return value of the latest\n * */\n\nfunction compose(...fns) {\n  return fns.reduce((a, b) => (...args) => a(b(...args)))\n}\n\nexport default compose\n","//@ts-check\nimport React from 'react'\nimport { Chip, Tooltip, withStyles } from '@material-ui/core'\nimport { inject, observer } from 'mobx-react'\nimport { bg2 } from '../../styles/colors'\nimport compose from '../../utils/compose'\n\nconst styles = () => ({\n  tag: { height: 20, marginRight: 6 }\n})\n\nconst enhance = compose(\n  // @ts-ignore\n  withStyles(styles),\n  inject('dbStore'),\n  observer\n)\n\n/**\n * @typedef Props\n * @prop {string} name\n * @prop {any} classes\n * @prop {any} onClick\n * @prop {any} style\n */\n\n/**\n * @param {Props} props\n */\nfunction TagWidget(props) {\n  // @ts-ignore\n  const { classes, name, dbStore, fallbackColor = bg2 } = props\n  const tag = dbStore.getTagByName(name)\n  const style = { backgroundColor: tag?.color || fallbackColor, ...props.style }\n\n  if (props.onClick) style.cursor = 'pointer'\n\n  const chip = <Chip size=\"small\" label={name} className={classes.tag} style={style} onClick={props.onClick} />\n  if (tag?.description) return <Tooltip title={tag.description}>{chip}</Tooltip>\n  else return chip\n}\n\n// @ts-ignore\nexport default enhance(TagWidget)\n","export const NpmScope = '@repeato'\nexport const NpmPackageName = 'cli-testrunner'\nexport const ExceptionHandlerResumeExecutionDelay = 2500\nexport const minLongClickDuration = 2000\nexport const MinimumTemplateContrast = 20\nexport const OnlineAvailableOcrLanguages = ['deu', 'eng', 'equ', 'fra', 'ita', 'osd', 'ara']\nexport const TessDataChecksums = {\n  // english tessdata file is important because otherwise fallback locator search might cause the worker thread to crash in case of a corrupt language file.\n  // we've had that case. That's why we now check with a checksum after downloading.\n  'eng.traineddata': 'daa0c97d651c19fba3b25e81317cd697e9908c8208090c94c3905381c23fc047'\n}\nexport const maxTimesToShowIntroDialog = 3\nexport const defaultAllowedStepsPerTest = 30\n\nexport const FrameSource = {\n  Live: 'Live', // the current device screenshot\n  Original: 'Original', // the device screenshot when the step was originally created (only available when editing the step)\n  TestRun: 'TestRun'\n}\n\nexport const APP_PROTOCOL = process.env.NODE_ENV === 'development' ? 'repeato-app-dev' : 'repeato-app'\nexport const ADMIN_URL = 'https://clients.repeato.app/'\nexport const GA4_MEASUREMENT_ID = 'G-8Q6FSNGBF9'\nexport const GA4_API_SECRET = 'rpBdkPzsQpqAwa9_Dy4JcA'\nexport const MAX_EDITED_TESTS_HISTORY = 12\n\nexport const IosConnectorName = 'RepeatoCapture'\nexport const LegacyKeyboardPackageName = 'com.android.adbkeyboard'\n\nexport const ConnectionStatus = {\n  notConnected: { label: 'Not connected' },\n  waitingForDeviceToBeOnline: { label: 'Waiting for device to be online...' },\n  fetchingDeviceData: { label: 'Fetching device info...' },\n  waitingForTouchConnectorConnected: { label: 'Initialising touch connector...' },\n  waitingForImageStreamConnected: { label: 'Initialising video connector...' },\n  fullyConnected: { label: 'Fully connected' },\n  disconnecting: { label: 'Disconnecting...' }\n}\n\nexport const DangerousAndroidPermissions = [\n  'READ_CALENDAR',\n  'WRITE_CALENDAR',\n  'READ_CALL_LOG',\n  'WRITE_CALL_LOG',\n  'PROCESS_OUTGOING_CALLS',\n  'CAMERA',\n  'READ_CONTACTS',\n  'WRITE_CONTACTS',\n  'GET_ACCOUNTS',\n  'ACCESS_FINE_LOCATION',\n  'ACCESS_COARSE_LOCATION',\n  'RECORD_AUDIO',\n  'READ_PHONE_STATE',\n  'READ_PHONE_NUMBERS',\n  'CALL_PHONE',\n  'ANSWER_PHONE_CALLS',\n  'ADD_VOICEMAIL',\n  'USE_SIP',\n  'BODY_SENSORS',\n  'SEND_SMS',\n  'RECEIVE_SMS',\n  'READ_SMS',\n  'RECEIVE_WAP_PUSH',\n  'RECEIVE_MMS',\n  'READ_EXTERNAL_STORAGE',\n  'WRITE_EXTERNAL_STORAGE'\n]\n\nexport const TouchConnectorTypes = {\n  MiniTouch: { name: 'Alpha', id: 1 },\n  UiAutomator: { name: 'Beta', id: 2 },\n  CmdCpy: { name: 'Gamma', id: 3 }\n}\n\nexport const Directions = { UP: 'up', DOWN: 'down', LEFT: 'left', RIGHT: 'right' }\nexport const DATABASE_FILENAME = 'database.rpt'\nexport const IssueDirName = 'issue-report-screenshots'\n","import { Directions } from './constants'\n\n/**\n * @param {*} step\n */\nexport const firstDragPoint = step => {\n  if (step.mouseMoveCoordinates?.length === 0) return null\n  if (step.dragType === 'DragAndDrop') return step.mouseMoveCoordinates[0]\n  return step.startPositionSource?.point\n}\n\n/**\n * @param {*} step\n */\nexport const lastDragPoint = step => {\n  if (step.mouseMoveCoordinates?.length === 0) return null\n  if (step.dragType === 'DragAndDrop') return step.mouseMoveCoordinates[step.mouseMoveCoordinates.length - 1]\n  return step.endPositionSource?.point\n}\n\n/**\n * @param {*} point\n */\nexport const infoStringY = point => {\n  return point ? `${(point.y * 100).toFixed(1)}%` : ''\n}\n\n/**\n * @param {*} point\n */\nexport const infoStringX = point => {\n  return point ? `${(point.x * 100).toFixed(1)}%` : ''\n}\n\n/**\n * @param {*} point\n */\nexport const infoString = point => `x/y: ${(point.x * 100).toFixed(1)}% / ${(point.y * 100).toFixed(1)}%`\n\n/**\n * @param {*} step\n */\nexport const verticalDragDirection = step => {\n  // returns values < 0 for up movement and > 0 for down movement\n  return lastDragPoint(step) && firstDragPoint(step) ? lastDragPoint(step).y - firstDragPoint(step).y : null\n}\n\n/**\n * @param {*} step\n */\nexport const horizontalDragDirection = step => {\n  // returns values < 0 for left movement and > 0 for right movement\n  return lastDragPoint(step) && firstDragPoint(step) ? lastDragPoint(step).x - firstDragPoint(step).x : null\n}\n\n/**\n * @param {*} step\n */\nexport const isHorizontalDrag = step => {\n  const horizontalDirection = horizontalDragDirection(step)\n  const verticalDirection = verticalDragDirection(step)\n  return horizontalDirection !== null && verticalDirection !== null ? Math.abs(horizontalDirection) - Math.abs(verticalDirection) > 0 : null\n}\n\n/**\n * @param {*} step\n */\nexport const dragAndDropGuess = step => {\n  // is used to check whether this was a horizontal or vertical drag (scroll operation, slider placement) or if it was a drag and drop\n  if (step.longClick) return true\n\n  let minX = 1,\n    maxX = 0,\n    minY = 1,\n    maxY = 0\n\n  // @ts-ignore\n  step.mouseMoveCoordinates?.forEach(p => {\n    if (p.x > maxX) maxX = p.x\n    if (p.x < minX) minX = p.x\n    if (p.y > maxY) maxY = p.y\n    if (p.y < minY) minY = p.y\n  })\n  const dx = maxX - minX\n  const dy = maxY - minY\n  const tolerance = 0.1\n  // assume that if there was a 10% movement in both x and y diection, it was a drag and drop gesture\n  // this is probably not always true, but the user is always free to correct the step by editing it\n  return dx > tolerance && dy > tolerance\n}\n\n/**\n * @param {*} step\n */\nexport const dragDirection = step => {\n  const isHorizontal = isHorizontalDrag(step)\n  // keep in mind: drag direction is oposite to scroll direction\n  if (isHorizontal === null) return null\n  else if (isHorizontal) {\n    const horizontalDirection = horizontalDragDirection(step)\n    return horizontalDirection && horizontalDirection < 0 ? Directions.LEFT : Directions.RIGHT\n  } else {\n    const verticalDirection = verticalDragDirection(step)\n    return verticalDirection && verticalDirection < 0 ? Directions.UP : Directions.DOWN\n  }\n}\n","//@ts-ignore\nimport React from 'react'\nimport { CommandLineIcon, LandingIcon, StartIcon } from '../icons'\nimport {\n  ArrowBack,\n  ArrowDownward,\n  ArrowForward,\n  ArrowUpward,\n  FilterNone,\n  Home,\n  HourglassEmpty,\n  KeyboardBackspace,\n  List,\n  Search,\n  TextFields,\n  TouchApp,\n  Comment,\n  MobileScreenShare\n} from '@material-ui/icons'\nimport TagWidget from '../components/widgets/TagWidget'\nimport {\n  dragAndDropGuess,\n  dragDirection,\n  firstDragPoint,\n  horizontalDragDirection,\n  infoStringX,\n  infoStringY,\n  isHorizontalDrag,\n  lastDragPoint,\n  verticalDragDirection\n} from './StepUtils'\n\nconst ScanTextOperators = {\n  contains: { id: 'contains', label: 'contain', js: 'scannedText.includes(\"searchText\")' },\n  equals: { id: 'equals', label: 'equal', js: 'scannedText === \"searchText\"' },\n  notContains: { id: 'notContains', label: 'not contain', js: 'scannedText.includes(\"searchText\") == false' },\n  greaterThan: { id: 'greaterThan', label: 'be greater than', js: 'parseFloat(scannedText) > parseFloat(\"searchText\")' },\n  lessThan: { id: 'lessThan', label: 'be less than', js: 'parseFloat(scannedText) < parseFloat(\"searchText\")' }\n}\n\nfunction formatUserfacingStepId(stepId) {\n  return stepId.substr(0, 6).toUpperCase()\n}\n\nfunction formatUserfacingTestId(testId) {\n  return testId?.substr(0, 6).toUpperCase()\n}\n\n/**\n * @param {String} str\n * @param {String} separator\n */\nfunction stringToSlug(str, separator) {\n  str = str.trim()\n  str = str.toLowerCase()\n\n  // remove accents, swap ñ for n, etc\n  const from = 'åàáãäâèéëêìíïîòóöôùúüûñç·/_,:;'\n  const to = 'aaaaaaeeeeiiiioooouuuunc------'\n\n  for (let i = 0, l = from.length; i < l; i++) {\n    str = str.replace(new RegExp(from.charAt(i), 'g'), to.charAt(i))\n  }\n\n  return str\n    .replace(/[^a-z0-9 -]/g, '') // remove invalid chars\n    .replace(/\\s+/g, '-') // collapse whitespace and replace by -\n    .replace(/-+/g, '-') // collapse dashes\n    .replace(/^-+/, '') // trim - from start of text\n    .replace(/-+$/, '') // trim - from end of text\n    .replace(/-/g, separator)\n}\n/**\n * @param {number} duration in seconds\n */\nfunction formatDuration(duration) {\n  var delta = duration\n\n  // calculate (and subtract) whole days\n  var days = Math.floor(delta / 86400)\n  delta -= days * 86400\n\n  // calculate (and subtract) whole hours\n  var hours = Math.floor(delta / 3600) % 24\n  delta -= hours * 3600\n\n  // calculate (and subtract) whole minutes\n  var minutes = Math.floor(delta / 60) % 60\n  delta -= minutes * 60\n\n  // what's left is seconds\n  var seconds = delta % 60\n\n  if (days) {\n    days = `${days}d `\n  } else {\n    days = ''\n  }\n  return `${days}${min2Digits(hours)}:${min2Digits(minutes)}:${min2Digits(Math.floor(seconds))}`\n}\n\nconst min2Digits = number => {\n  if (number < 10) {\n    return '0' + number\n  }\n  return number\n}\n\n/**\n * Convert ms to human readable time\n * @param duration\n * @returns string\n */\nconst msToTime = duration => {\n  if (!duration) return ''\n  let seconds = Math.floor((duration / 1000) % 60)\n  let minutes = Math.floor((duration / (1000 * 60)) % 60)\n  let hours = Math.floor((duration / (1000 * 60 * 60)) % 24)\n\n  if (hours < 10) {\n    hours = '0' + hours\n  }\n  if (minutes < 10) {\n    minutes = '0' + minutes\n  }\n  if (seconds < 10) {\n    seconds = '0' + seconds\n  }\n  return hours + ':' + minutes + ':' + seconds\n}\n\n/**\n * Convert string to local date time format\n * @param date\n * @returns\n */\nconst toDateTime = date => {\n  if (!date) return ''\n\n  const dateObj = new Date(date)\n\n  if (isNaN(dateObj.getDate())) return ''\n\n  return dateObj.toLocaleDateString() + ' ' + dateObj.toLocaleTimeString()\n}\n\nfunction getRandomCharacter() {\n  const alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  const index = Math.floor((alphabet.length - 1) * Math.random())\n  return alphabet[index]\n}\n\nfunction trim(string, char) {\n  if (char === ']') char = '\\\\]'\n  if (char === '\\\\') char = '\\\\\\\\'\n  return string.replace(new RegExp('^[' + char + ']+|[' + char + ']+$', 'g'), '')\n}\n\nfunction formatDateForFilename(date) {\n  const dateTimeFormat = new Intl.DateTimeFormat('de', {\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric',\n    year: 'numeric',\n    month: 'numeric',\n    day: 'numeric'\n  })\n  const [\n    { value: day },\n    ,\n    { value: month },\n    ,\n    { value: year },\n    ,\n    { value: hour },\n    ,\n    { value: minute },\n    ,\n    { value: second }\n  ] = dateTimeFormat.formatToParts(date)\n  const dateTimeStr = `${year}-${month}-${day}-${hour}-${minute}-${second}`\n  return dateTimeStr\n}\n\nfunction formatDateTime(date) {\n  if (!date) return ''\n  return `${date.toLocaleDateString()} ${date.toLocaleTimeString()}`\n}\n\n/**\n * Similar to grep:\n * 1. Filter each line by looking for a string.\n * 2. Remove removeString\n * 3. Return first line\n * @param {string} string\n * @param {string} search regex eg. \"myVariable=([0-9])\"\n * @returns {string}\n */\nfunction filterMultiline(string, search) {\n  const lines = string.split('\\n')\n  const filteredLines = lines.map(line => line.trim()).filter(line => line.length > 0)\n  const results = []\n  const regex = new RegExp(search)\n\n  filteredLines.forEach(line => {\n    const match = line.match(regex)\n    if (match) {\n      if (match.length > 1) {\n        results.push(match[1].replace('\\r', '').trim())\n      } else {\n        results.push(match[0].replace('\\r', '').trim())\n      }\n    }\n  })\n\n  if (results.length > 1) {\n    console.warn('Multiple lines found:', results)\n    return results[0]\n  } else if (results.length === 1) {\n    return results[0]\n  } else {\n    return null\n  }\n}\n\nfunction truncateStart(string, maxLength) {\n  if (string.length > maxLength) {\n    string = '...' + string.substring(string.length - maxLength, string.length)\n  }\n  return string\n}\n\nfunction truncate(string, maxLength) {\n  if (string.length > maxLength + 3) {\n    string = string.substring(0, maxLength - 3) + '...'\n  }\n\n  return string\n}\n\n/**\n *\n * @param {string} string\n * @param {Object.<string, string>} replaceDict\n * @returns String\n */\nfunction replaceAllDict(string, replaceDict) {\n  for (var key in replaceDict) {\n    // @ts-ignore\n    string = replaceAll(string, key, replaceDict[key])\n  }\n  return string\n}\n/**\n * Replaces all occurenses of a string\n * @param {string} string\n * @param {string} search\n * @param {string} replacement\n */\nfunction replaceAll(string, search, replacement) {\n  return string.split(search).join(replacement)\n}\n\nfunction getScanTextLabel(step) {\n  if (step.scanTextLabel) return step.scanTextLabel\n  // in batchViewer we can't access view properties because we don't have MST models. This is the fallback:\n  return ScanTextOperators[step.operator]?.label\n}\n\n/**\n * Return step name according to the type of step\n * @param {*} step\n * @param type\n * @returns\n */\nconst getStepInfo = (step, type = 'all', tagWidget = true) => {\n  let start = ''\n  let end = ''\n  let sDrop = ''\n  let iconDrop = null\n\n  const pDrop = step.longClick ? ' and drop' : ''\n\n  if (step.type === 'drag') {\n    if (step.stopOnFingerprintFound) {\n      sDrop = `until fingerprint is found`\n    } else if (isHorizontalDrag(step)) {\n      const horizontalDirection = horizontalDragDirection(step)\n      iconDrop = horizontalDirection && horizontalDirection > 0 ? ArrowForward : ArrowBack\n      start = infoStringX(firstDragPoint(step))\n      end = infoStringX(lastDragPoint(step))\n      sDrop = `${start} -> ${end}`\n    } else {\n      const verticalDirection = verticalDragDirection(step)\n      iconDrop = verticalDirection && verticalDirection > 0 ? ArrowDownward : ArrowUpward\n      start = infoStringY(firstDragPoint(step))\n      end = infoStringY(lastDragPoint(step))\n      sDrop = `${start} -> ${end}`\n    }\n  }\n\n  let textLabel\n\n  if (step.type === 'text') {\n    const actions = []\n    step.clearText && actions.push('Clear text')\n    step.text && actions.push('Type')\n    textLabel = actions.join(' and ')\n  }\n\n  const allSteps = {\n    click: {\n      icon: TouchApp,\n      primary: step.longClick ? 'Long Click' : 'Click',\n      secondary: 'on fingerprint',\n      cmdLineIcon: '👆'\n    },\n    comment: {\n      // icon: Comment,\n      primary: <b>{step.title}</b>,\n      secondary: step.description,\n      cmdLineIcon: '💬'\n    },\n    drag: {\n      icon: iconDrop,\n      primary: `Drag ${dragAndDropGuess(step) ? 'around' : dragDirection(step) || ''}${pDrop}`,\n      secondary: sDrop,\n      cmdLineIcon: '👆'\n    },\n    waitForTemplate: {\n      icon: HourglassEmpty,\n      primary: 'Wait',\n      secondary: 'for fingerprint to show',\n      cmdLineIcon: '⏳'\n    },\n    waitForDuration: {\n      icon: HourglassEmpty,\n      primary: 'Wait',\n      secondary: `for ${step.duration} ms ${step.subtype === 'waitForAnimationFinish' ? ' (screen animation)' : ''}`,\n      cmdLineIcon: '⏳'\n    },\n    waitForKeyboard: {\n      icon: HourglassEmpty,\n      primary: 'Wait',\n      secondary: 'for keyboard to show up',\n      cmdLineIcon: '⌨️'\n    },\n    text: {\n      icon: TextFields,\n      primary: textLabel,\n      secondary: step.text && `\"${step.text}\"`,\n      cmdLineIcon: '📝'\n    },\n    scanText: {\n      primary: 'Scan for text',\n      secondary: '',\n      cmdLineIcon: '🔎'\n    },\n    home: {\n      icon: Home,\n      primary: 'Home press',\n      secondary: '',\n      cmdLineIcon: '🏠'\n    },\n    back: {\n      icon: KeyboardBackspace,\n      primary: 'Back press',\n      secondary: '',\n      cmdLineIcon: '⬅️'\n    },\n    appSwitch: {\n      icon: FilterNone,\n      primary: 'Show app switch',\n      secondary: '',\n      cmdLineIcon: '📱'\n    },\n    templateAssertion: {\n      icon: Search,\n      primary: 'Check specific element',\n      secondary: '',\n      cmdLineIcon: '✅'\n    },\n    someContentAssertion: {\n      primary: 'Check some dynamic element',\n      secondary: '',\n      cmdLineIcon: '✅'\n    },\n    someContentClick: {\n      primary: 'Click',\n      secondary: 'on some content at x/y',\n      cmdLineIcon: '👆'\n    },\n    xyClick: {\n      primary: 'Click',\n      secondary: `at x/y: ${Math.floor(step.point?.x * 100)}% / ${Math.floor(step.point?.y * 100)}%`,\n      cmdLineIcon: '👆'\n    },\n    startApp: {\n      icon: StartIcon,\n      primary: 'Start App',\n      secondary: [step.packageName, step.iosBundleId].join(' | '),\n      cmdLineIcon: '🚀'\n    },\n    switchDevice: {\n      icon: MobileScreenShare,\n      primary: 'Switch Device',\n      secondary: [step.roleName, step.deviceName].join(' | '),\n      cmdLineIcon: '📱'\n    },\n    stopApp: {\n      icon: LandingIcon,\n      primary: 'Stop App',\n      secondary: step.packageName ? step.packageName : step.iosBundleId,\n      cmdLineIcon: '🛬'\n    },\n    execScript: {\n      icon: CommandLineIcon,\n      primary: step.language === 'cli' ? 'Exec Command Line Script' : 'Exec JavaScript',\n      secondary: step.script,\n      cmdLineIcon: '>'\n    },\n    subTest: {\n      icon: List,\n      primary: 'SubTest',\n      secondary: '',\n      cmdLineIcon: '>'\n    },\n    scanTextAssertion: {\n      icon: Search,\n      primary: 'Check for text',\n      secondary: step.assertionJs ? `Check: ${step.assertionJs}` : `Scanned text should ${getScanTextLabel(step)} \"${step.searchText}\"`,\n      cmdLineIcon: '✅'\n    },\n    scanTextClick: {\n      primary: 'Click on text',\n      secondary: `\"${step.searchText}\"`,\n      cmdLineIcon: '👆'\n    },\n    scanTextWait: {\n      icon: HourglassEmpty,\n      primary: 'Wait',\n      secondary: step.assertionJs ? `Until true: ${step.assertionJs}` : `Until scanned text ${getScanTextLabel(step)} \"${step.searchText}\"`,\n      cmdLineIcon: '⏳'\n    }\n  }\n\n  const noDesc = 'No description found for this element'\n  const stepText = allSteps[step.type] || {\n    primary: noDesc,\n    secondary: noDesc,\n    icon: TouchApp,\n    cmdLineIcon: '👆'\n  }\n  if (step.optional) stepText.primary = `Optional ${stepText.primary}`\n  if (tagWidget && step.tags) {\n    stepText.secondary = (\n      <span>\n        {stepText.secondary}{' '}\n        {step.tags.map(tag => (\n          <TagWidget name={tag} key={tag} />\n        ))}\n      </span>\n    )\n  }\n  return type === 'all' ? stepText : stepText[type]\n}\n\n/**\n * Looks for placeholders in str in the form of \"$VARNAME\" and adds an entry to replaceStrings dictionary:\n *  Key: The $VARNAME variable\n *  Value: The respective env var value from process.env\n * @param {*} str\n * @param {*} replaceStrings\n */\nfunction addReplacementStringsWithEnvVars(str, replaceStrings) {\n  const vars = str.match(/\\$[a-zA-Z0-9_]+/g)\n  vars?.forEach(envVar => {\n    if (!replaceStrings[envVar]) {\n      replaceStrings[envVar] = process.env[envVar.replace('$', '')]\n    }\n  })\n}\n\n// For some reason we used a single number to version mapping in the iOS connector\n// In the long run I'd like to get rid of it.\nconst protocolToVersionNum = num => {\n  const str = '' + num\n  return [str[0], str[1], str[2]].join('.')\n}\n\nconst getPropFromIosPackageInfo = (packageInfo, prop) => {\n  /**\n   *CFBundleIdentifier = \"com.stephanpetzl.film-o-matic\";\n    CFBundleInfoDictionaryVersion = \"6.0\";\n    CFBundleName = MovieSwift;\n    CFBundleVersion = 1400;\n    ...\n   */\n  const regex = new RegExp(`${prop} = (.*);`)\n  const matches = regex.exec(packageInfo)\n  if (matches && matches.length > 1) {\n    return replaceAll(matches[1], '\"', '').trim()\n  } else return undefined\n}\n\n// Unfortunately this never worked in release builds- always reported wrong line numbers\nconst stacktraceToLineNumber = (stack, offset = -2) => {\n  console.info('stacktraceToLineNumber', stack)\n  const regex = new RegExp(`([0-9]+:[0-9]+)`)\n  const matches = regex.exec(stack)\n  if (!matches?.length) {\n    return ''\n  } else {\n    const lineAndCol = matches[1].split(':')\n    return `line ${parseInt(lineAndCol[0]) + offset}, column ${lineAndCol[1]}`\n  }\n}\n\n/**\n * Compare two version strings\n * @param {String} version1\n * @param {String} version2\n * @returns {boolean} true if version1 is greater than version2\n */\nconst isVersion1GreaterThanVersion2 = (version1, version2) => {\n  version1 = version1.replace('v', '')\n  version2 = version2.replace('v', '')\n  return (\n    version1.localeCompare(version2, undefined, {\n      numeric: true\n    }) > 0\n  )\n}\n\nexport {\n  stringToSlug,\n  truncate,\n  truncateStart,\n  formatDuration,\n  getRandomCharacter,\n  trim,\n  formatDateForFilename,\n  filterMultiline,\n  replaceAll,\n  replaceAllDict,\n  formatUserfacingStepId,\n  formatUserfacingTestId,\n  formatDateTime,\n  msToTime,\n  toDateTime,\n  getStepInfo,\n  addReplacementStringsWithEnvVars,\n  ScanTextOperators,\n  protocolToVersionNum,\n  getPropFromIosPackageInfo,\n  stacktraceToLineNumber,\n  isVersion1GreaterThanVersion2\n}\n","import { Typography } from '@mui/material'\nimport { darkBg2 } from '../../../styles/colors'\n\ninterface Props {\n  name?: String\n  value: String | number\n  className?: string\n}\n\nconst lineStyle = '1px solid ' + darkBg2\n\nconst separatorStyle = {\n  borderBottom: lineStyle,\n  marginBottom: 8,\n  paddingBottom: 6\n}\n\nconst h3Style = { fontSize: '0.8rem', fontWeight: 400, color: darkBg2, marginBottom: 3 }\n\nexport const NameValue = (props: Props) => {\n  const { name, value, className } = props\n\n  let val\n  if (!Boolean(value) && '' + value !== '0') {\n    val = 'Not available'\n  } else {\n    val = value\n  }\n  return (\n    <div style={separatorStyle} className={className || ''}>\n      {name && (\n        <Typography variant=\"h3\" style={h3Style}>\n          {name}\n        </Typography>\n      )}\n      <Typography variant=\"h2\" style={{ fontSize: '1.0rem' }}>\n        {val}\n      </Typography>\n    </div>\n  )\n}\n","import { withStyles } from '@material-ui/core'\nimport { ArrowForwardIos } from '@material-ui/icons'\nimport { List, ListItem, ListItemIcon, ListItemText, MenuItem, Select, TextField, Typography } from '@mui/material'\nimport * as React from 'react'\nimport { TestIcon } from '.'\nimport { formatDuration, formatUserfacingTestId as formatId, toDateTime } from '../../../lib/StringUtils'\nimport { darkBg, darkBg2, defaultBg, errorGradient, errorWarm, success, successGradient, superLight } from '../../../styles/colors'\nimport { StepResult, Test, TestRun } from '../types'\nimport { NameValue } from './NameValue'\nimport { useNavigate } from 'react-router'\n\nconst ariaLabel = { 'aria-label': 'description' }\nconst Metrics: any = {\n  duration: 'Test Run Duration',\n  appStartupDuration: 'App Startup Duration',\n  skippedFramesCount: 'Skipped Frames Count'\n}\n\ninterface SidebarProps {\n  activeTab: number | null\n  setActiveTab: React.Dispatch<React.SetStateAction<number | null>>\n}\n\nconst typoStyle = {\n  fontSize: '0.9rem',\n  lineHeight: '1.3'\n}\n\nconst lineStyle = '1px solid ' + darkBg2\nconst FirstColWidth = 135\n\nconst listItemStyle = {\n  paddingRight: 0,\n  paddingLeft: 0\n}\n\nconst CssTextField = withStyles({\n  root: {\n    '& input': {\n      color: defaultBg,\n      fontWeight: '100'\n    },\n    '& label.Mui-focused': {\n      color: defaultBg\n    },\n    // hover border color\n    '& .MuiInput-underline:hover:before': {\n      borderBottom: '1px solid ' + superLight\n    },\n    '& .MuiInput-underline:before': {\n      borderBottomColor: superLight\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: defaultBg\n    }\n  }\n})(TextField)\n\nconst CssSelect = withStyles({\n  root: {\n    '& input': {\n      color: defaultBg,\n      fontWeight: '100'\n    },\n    '& label.Mui-focused': {\n      color: defaultBg\n    },\n    // hover border color\n    '& .MuiInput-underline:hover:before': {\n      borderBottom: '1px solid ' + superLight\n    },\n    '& .MuiInput-underline:before': {\n      borderBottomColor: superLight\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: defaultBg\n    }\n  }\n})(Select as any)\n\nconst renderTestResultRows = (test: Test, index: number, metric: string, maxValue: number) => {\n  //test.testRuns.sort((a: any, b: any) => Date.parse(b.date) - Date.parse(a.date))\n  const testRuns: TestRun[] = test.testRuns\n  return (\n    <>\n      {testRuns.map((tr: TestRun, index: number) => (\n        <TestResultRow key={tr.id} testRun={tr} metric={metric} maxValue={maxValue} />\n      ))}\n    </>\n  )\n}\ninterface TestResultRowProps {\n  testRun: TestRun\n  metric: string\n  maxValue: number\n}\n\nconst TestResultRow = (props: TestResultRowProps) => {\n  const { testRun, metric, maxValue } = props\n  const value = testRun[metric]\n  let formatedValue, percentage\n  if (value) {\n    formatedValue = '' + value\n    switch (metric) {\n      case 'duration':\n        formatedValue = value > 1000 ? formatDuration(value / 1000) : value + ' ms'\n        break\n      case 'appStartupDuration':\n        formatedValue = value + ' ms'\n        break\n    }\n    percentage = (100.0 * value) / maxValue\n  } else {\n    formatedValue = 'N/A'\n    percentage = 0\n  }\n\n  return (\n    <Typography style={{ display: 'flex', flexDirection: 'row' }} variant=\"body2\" component=\"div\">\n      <div style={{ width: FirstColWidth }}>{toDateTime(testRun.date)}</div>\n      <div style={{ marginRight: 10 }}>{formatedValue}</div>\n\n      <div style={{ display: 'flex', flexGrow: 1, alignItems: 'center' }}>\n        <div style={{ height: 3, width: `${percentage}%`, background: testRun.wasSuccessful ? successGradient : errorGradient }}></div>\n      </div>\n    </Typography>\n  )\n}\nconst getMaxValue = (fieldName: string) => {\n  var maxValue = Number.MIN_VALUE\n\n  batchRun.tests.forEach((t: any) =>\n    t.testRuns.forEach((tr: any) => {\n      if (tr[fieldName]) {\n        maxValue = Math.max(maxValue, tr[fieldName])\n      }\n    })\n  )\n\n  return maxValue\n}\n\nexport const Sidebar = ({ activeTab, setActiveTab }: SidebarProps) => {\n  const navigate = useNavigate()\n\n  const [values, setValues] = React.useState({ searchKey: '', filter: 'all', currentMetric: 'duration' })\n  const [tests, setTests] = React.useState(batchRun.tests)\n\n  var maxMetricValue = getMaxValue(values.currentMetric)\n  // active 1st test\n  const defaultTest = React.useCallback((tests: Test[]) => {}, [])\n\n  // filter the tests on the basis of search string or select filter\n  const search = React.useCallback(() => {\n    const { filter } = values\n\n    const searchKey = values.searchKey.toLowerCase()\n\n    if (!searchKey && filter === 'all') {\n      setTests(batchRun.tests)\n      return\n    }\n\n    let filteredTests: any = batchRun.tests\n\n    if (searchKey)\n      filteredTests = filteredTests.filter(\n        (test: Test) =>\n          test?.id?.toLowerCase().includes(searchKey) ||\n          test?.title?.toLowerCase().includes(searchKey) ||\n          test.devices.some(d => d.name?.toLowerCase().includes(searchKey))\n        // test.devices[0]?.name?.toLowerCase().includes(searchKey)\n      )\n\n    if (filter && filter !== 'all')\n      filteredTests = filteredTests.filter((test: Test) => {\n        const lastTestRun = test?.testRuns[test?.testRuns.length - 1]\n        const steps = lastTestRun?.stepResults.filter((step: StepResult) => step.success === (filter === 'successful')) // get steps according to selected option\n\n        if (filter === 'failed') return steps.length > 0 // if single step is found means it's failed test\n        return steps.length === lastTestRun?.stepResults.length // else all steps true\n      })\n\n    setTests(filteredTests)\n    defaultTest(filteredTests) // active 1st test by default\n  }, [values, defaultTest])\n\n  // when input changed then do search\n  const onChange = (e: any) => {\n    const { name, value } = e.target\n    setValues({ ...values, [name]: value })\n  }\n\n  React.useEffect(() => {\n    search() // perform search whenever filter OR search input value changed\n  }, [values, search])\n\n  // active 1st test by default\n  React.useEffect(() => {\n    defaultTest(batchRun.tests as any)\n  }, [defaultTest])\n\n  const spacing = 30\n  const successPercentage = (100.0 * batchRun.stats?.successCount) / batchRun.stats?.totalCount\n\n  return (\n    <div\n      id=\"sidebar\"\n      style={{\n        color: 'white',\n        flexBasis: activeTab === null ? '100%' : '50%',\n        height: '100%'\n      }}\n    >\n      <div\n        id=\"left-col\"\n        style={{\n          width: 230,\n          background: darkBg,\n          padding: 60,\n          flexBasis: 'auto',\n          flexGrow: 0,\n          overflow: 'auto'\n        }}\n      >\n        <img\n          onClick={() => window.open('https://www.repeato.app')}\n          src=\"assets/logo.png\"\n          alt=\"logo\"\n          style={{ maxWidth: 140, marginBottom: 100, cursor: 'pointer' }}\n        />\n        <div>\n          <Typography variant=\"h3\" component=\"div\">\n            Batch Run Report:\n          </Typography>\n          <Typography variant=\"h1\" component=\"div\" style={{ marginBottom: 26 }}>\n            {batchRun.title}\n          </Typography>\n\n          <div style={{ position: 'relative', marginBottom: spacing }}>\n            <svg width=\"100%\" height=\"100%\" viewBox={`3.8 3.8 34.4 34.4`} className=\"donut\">\n              <circle className=\"donut-ring\" cx=\"21\" cy=\"21\" r=\"15.91549430918954\" fill=\"transparent\" stroke={errorWarm} strokeWidth=\"2\"></circle>\n\n              <circle\n                className=\"donut-segment\"\n                cx=\"21\"\n                cy=\"21\"\n                r=\"15.91549430918954\"\n                fill=\"transparent\"\n                stroke={success}\n                strokeWidth=\"2.05\"\n                strokeDasharray={successPercentage + ' ' + (100 - successPercentage)}\n                strokeDashoffset={25}\n              ></circle>\n            </svg>\n            <div\n              style={{ position: 'absolute', display: 'flex', justifyContent: 'center', alignItems: 'center', width: '100%', height: '100%', top: 0 }}\n            >\n              <Typography sx={typoStyle} component=\"div\" style={{ width: 'fit-content' }}>\n                <div style={{ borderBottom: lineStyle, marginBottom: 4 }}>\n                  {`${batchRun.stats?.failCount} failed`}\n                  <br />\n                  {`${batchRun.stats?.successCount} successful`}\n                  <br />\n                </div>\n                {`${batchRun.tests?.length} total`}\n              </Typography>\n            </div>\n          </div>\n\n          <NameValue name=\"Batch Run Date:\" value={toDateTime(batchRun?.createdOn)} />\n          <NameValue name=\"Duration:\" value={batchRun.stats?.duration} />\n          <NameValue name=\"Steps Executed:\" value={batchRun.stats?.stepsCount} />\n          <NameValue name=\"Repeato Version:\" value={version} />\n        </div>\n      </div>\n      <div\n        id=\"right-col\"\n        className={activeTab !== null ? 'hideInPrintVersion' : ''}\n        style={{\n          background: darkBg2,\n          flexGrow: 1,\n          display: 'flex',\n          flexDirection: 'column'\n        }}\n      >\n        <div style={{ display: 'flex', marginBottom: 16, padding: 40, paddingBottom: 10, alignItems: 'center' }}>\n          <div style={{ flexBasis: activeTab === null ? '50%' : '100%', display: 'flex' }}>\n            {/** @ts-ignore */}\n            <CssTextField\n              variant=\"standard\"\n              style={{ flexBasis: '44%', flexGrow: 1, marginRight: 30 }}\n              placeholder=\"Search (title, id)\"\n              name=\"searchKey\"\n              onChange={onChange}\n              inputProps={ariaLabel}\n            />\n            {/** @ts-ignore */}\n            <CssSelect variant=\"standard\" name=\"filter\" onChange={onChange} value={values.filter} style={{ flexGrow: 1, flexBasis: '10%' }}>\n              <MenuItem value=\"all\">All</MenuItem>\n              <MenuItem value=\"successful\">Successful</MenuItem>\n              <MenuItem value=\"failed\">Failed</MenuItem>\n            </CssSelect>\n          </div>\n          {activeTab === null && (\n            <>\n              <Typography\n                component=\"div\"\n                variant=\"body1\"\n                style={{\n                  paddingRight: 10,\n                  paddingLeft: 30\n                }}\n              >\n                Performance Metric:\n              </Typography>\n              {/** @ts-ignore */}\n              <CssSelect variant=\"standard\" name=\"currentMetric\" onChange={onChange} value={values.currentMetric}>\n                {Object.keys(Metrics).map((metric, index) => (\n                  <MenuItem key={metric} value={metric}>\n                    {Metrics[metric]}\n                  </MenuItem>\n                ))}\n              </CssSelect>\n            </>\n          )}\n        </div>\n\n        <List disablePadding={true} style={{ overflow: 'auto', height: '100%', padding: 40, paddingTop: 0 }}>\n          {tests.map((test: any, index: number) => (\n            <ListItem\n              button\n              divider\n              key={test.id + index}\n              style={listItemStyle}\n              onClick={() => {\n                setActiveTab(index)\n                navigate(`/test/${index}/${test.id}`)\n              }}\n            >\n              <ListItemIcon sx={{ color: 'white', minWidth: 36 }}>\n                <TestIcon test={test} />\n              </ListItemIcon>\n\n              <ListItemText primary={`${test.title}`} secondary={`ID: ${formatId(test.id)}`} style={{ flexGrow: 1, width: 0 }} />\n\n              <ArrowForwardIos style={{ opacity: activeTab === index ? 1 : 0 }} />\n              {activeTab === null && (\n                <div style={{ flex: 1, flexDirection: 'row', flexGrow: 1 }}>\n                  <div>{renderTestResultRows(test, index, values.currentMetric, maxMetricValue)}</div>\n                </div>\n              )}\n            </ListItem>\n          ))}\n        </List>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Grid, Typography } from '@mui/material'\nimport { Test, DeviceData } from '../types'\nimport { msToTime, formatUserfacingTestId as formatId, toDateTime } from '../../../lib/StringUtils'\nimport { NameValue } from './NameValue'\nimport { errorGradient, successGradient } from '../../../styles/colors'\n\ninterface Props {\n  test: Test\n  failStepRef: any\n}\n\nconst deviceInfo = (deviceData: DeviceData) => deviceData?.name + ' / ' + deviceData?.os + ' ' + (deviceData?.osVersion || '')\n\nexport const TestInfo = (props: Props) => {\n  const { test, failStepRef } = props\n  // latest testRun, assuming testRuns are sorted by date ASC (which should always be the case)\n\n  const testRun = test?.testRuns[test?.testRuns.length - 1]\n  console.info('test.testRuns')\n  console.table(test.testRuns)\n  const packageData = testRun?.appVersions[0]\n  const stepResults = testRun?.stepResults\n\n  const successSteps = stepResults.filter(result => result.success)\n  const failedSteps = stepResults.filter(result => !result.success)\n  const isFailedTest = failedSteps.length > 0\n\n  const scrollToFailStep = React.useCallback(() => {\n    if (!failStepRef.current) return\n    failStepRef.current.scrollIntoView({ behavior: 'smooth', block: 'start' })\n  }, [failStepRef])\n\n  React.useEffect(() => {\n    const scrollContainer = document.getElementById('scrollContainer')\n    if (!failStepRef.current) {\n      scrollContainer?.scrollTo({ top: 0, left: 0, behavior: 'auto' }) // if not failed step then scroll to top\n      return\n    }\n    if (isFailedTest) setTimeout(() => scrollToFailStep(), 600) // delay scroll so images get loaded\n  }, [test.id, isFailedTest, failStepRef, scrollToFailStep])\n\n  const stepsFailedStyle = { fontSize: '1rem', textDecoration: 'auto', cursor: 'auto' }\n  if (failedSteps.length > 0) {\n    stepsFailedStyle.textDecoration = 'underline'\n    stepsFailedStyle.cursor = 'pointer'\n  }\n\n  if (!testRun) {\n    return null\n  }\n\n  return (\n    <div>\n      <Typography variant=\"h1\" component=\"div\" style={{ marginBottom: 20, marginTop: 7, fontSize: '1.7rem' }}>\n        {test.title} (ID: {formatId(test.id)})\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={6}>\n          <NameValue name=\"Test Created:\" value={toDateTime(test?.createdOn)} />\n          <NameValue name=\"Package Name:\" value={packageData?.packageName} />\n          <NameValue name=\"Test Run Duration:\" value={msToTime(testRun?.duration)} />\n          <NameValue name=\"App Min Sdk:\" value={packageData?.minSdk} />\n          <NameValue name=\"Install Date:\" value={toDateTime(packageData?.firstInstallTime)} />\n        </Grid>\n        <Grid item xs={6}>\n          <NameValue name=\"Test Run Date:\" value={toDateTime(testRun?.date)} />\n          <NameValue name=\"Package Version:\" value={packageData?.name} />\n          <NameValue name=\"App Code:\" value={packageData?.code} />\n          <NameValue name=\"App Target Sdk:\" value={packageData?.targetSdk} />\n          <NameValue name=\"Last Update Date:\" value={toDateTime(packageData?.lastUpdateTime)} />\n        </Grid>\n      </Grid>\n\n      <Grid container spacing={3} style={{ marginBottom: 20 }}>\n        <Grid item xs={6}>\n          {test.devices?.map((device, index) => (\n            <NameValue\n              key={device.serial}\n              className={`${index + 1 !== test.devices.length ? 'noSeparator' : ''}`}\n              name={`${index === 0 ? 'Device (Recorded):' : ''}`}\n              value={deviceInfo(device)}\n            />\n          ))}\n        </Grid>\n        <Grid item xs={6}>\n          {testRun.devices?.map((device, index) => (\n            <NameValue\n              key={device.serial}\n              className={`${index + 1 !== testRun.devices.length ? 'noSeparator' : ''}`}\n              name={`${index === 0 ? 'Device (Executed):' : ''}`}\n              value={deviceInfo(device)}\n            />\n          ))}\n        </Grid>\n      </Grid>\n\n      <div\n        style={{\n          borderRadius: 4,\n          padding: 10,\n          background: testRun.wasSuccessful ? successGradient : errorGradient\n        }}\n      >\n        <Typography sx={{ fontSize: '1rem' }} variant=\"h6\">\n          {`${test.stepsCountWithSubTestSteps} steps: ${successSteps.length} successful / `}\n          <Typography component=\"span\" sx={stepsFailedStyle} variant=\"h6\" onClick={() => (failedSteps.length > 0 ? scrollToFailStep() : null)}>\n            {`${failedSteps.length}  failed`}\n          </Typography>\n        </Typography>\n\n        {isFailedTest && (\n          <Typography sx={{ fontSize: '1rem', whiteSpace: 'break-spaces' }} variant=\"h6\">\n            Status Message:{` ${failedSteps[0]?.message}`}\n          </Typography>\n        )}\n      </div>\n    </div>\n  )\n}\n","export default {\n  STORE_VERSION: 15,\n  TEST_FORMAT_VERSION: 7,\n  STORE_VERSION_KEY: 'db_store_version',\n  STORE_KEY: 'db_store'\n}\n\n/**\n * This is the root of our data store.\n * It holds all the business data as well as all the application UI state data (-> uiStore)\n * In the future all non-ui data should be synced to a server, so team collaborators can access the same tests\n */\nexport const ROOT_TREE_NODE_ID = 'ROOT_TREE_NODE_ID'\n//export const FIRST_TEST_BATCH_ID = 'DEFAULT_BATCH_ID'\n\nexport const DEFAULT_FOLDERS_SNAPSHOT = {\n  id: ROOT_TREE_NODE_ID,\n  title: 'All tests',\n  children: [{ id: 'default-node', title: 'Recorded tests', children: [] }] // create a single default folder\n}\n\nexport const BatchRunExportDataDirName = 'data'\n","import { Chip, Tooltip } from '@material-ui/core'\nimport { bg2 } from '../../../styles/colors'\n\ninterface Props {\n  name: string\n}\n\nfunction TagWidget(props: Props) {\n  const { name } = props\n\n  const tag = window.tagsMapping.find((t: any) => t.name === name)\n  const style = { backgroundColor: tag?.color || bg2, marginLeft: 8, height: 20 }\n  const chip = <Chip size=\"small\" label={name} style={style} />\n\n  return (\n    <span>\n      {/** @ts-ignore */}\n      <Tooltip title={tag?.description || ''}>{chip}</Tooltip>\n    </span>\n  )\n}\n\nexport default TagWidget\n","/* eslint-disable jsx-a11y/alt-text */\nimport { useRef, useState } from 'react'\nimport { defaultBg, secondary } from '../../../../styles/colors'\nimport { Step } from '../../types'\n\ninterface Props {\n  step: Step\n  src: string\n}\n\nexport const DrawWidget = ({ step, src }: Props) => {\n  const ref = useRef<any>(null)\n  const [size, setSize] = useState({ width: 500, height: 800 })\n\n  const getCoordinate = (cmd: string, point: { x: number; y: number }) => {\n    return `${cmd} ${size.width * point.x} ${size.height * point.y} `\n  }\n\n  const onImgLoad = (event: any) => {\n    const img = event.target\n    setSize({ width: img.offsetWidth, height: img.offsetHeight })\n  }\n\n  const points = step.mouseMoveCoordinates\n\n  let path = ''\n  let arrowTransform = ''\n  let longClickDot = null\n  let longClickDotBg = null\n\n  if (points.length > 1) {\n    path += getCoordinate('M', points[0])\n    for (let i = 1; i < points.length; i++) {\n      path += getCoordinate('L', points[i])\n    }\n    const firstPoint = points[0]\n    const lastPoint = points[points.length - 1]\n    let oneBefore = points[points.length - 2]\n\n    const dx = lastPoint.x - oneBefore.x\n    const dy = lastPoint.y - oneBefore.y\n    const deg = (Math.atan2(dy, dx) * 180) / Math.PI\n    arrowTransform = `translate(${size.width * lastPoint.x} ${size.height * lastPoint.y}) rotate(${deg} 0 0) translate(-2 -7)`\n\n    if (step.longClick) {\n      longClickDotBg = (\n        <circle cx={size.width * firstPoint.x} cy={size.height * firstPoint.y} r={10} stroke={defaultBg} fill={defaultBg} strokeWidth=\"10\" />\n      )\n      longClickDot = (\n        <circle cx={size.width * firstPoint.x} cy={size.height * firstPoint.y} r={10} stroke={secondary} fill={secondary} strokeWidth=\"2\" />\n      )\n    }\n  }\n\n  return (\n    <div ref={ref} style={{ position: 'relative', width: 'fit-content', height: 'fit-content', cursor: 'crosshair' }}>\n      <img style={{ maxWidth: '100%', maxHeight: '-webkit-fill-available' }} src={src} onLoad={onImgLoad} />\n      <svg\n        style={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '100%' }}\n        xmlns=\"https://www.w3.org/2000/svg\"\n        viewBox={`0 0 ${size.width} ${size.height}`}\n        preserveAspectRatio=\"none\"\n      >\n        {longClickDotBg}\n        <path strokeWidth=\"10\" stroke={defaultBg} fill=\"none\" strokeLinejoin=\"round\" strokeLinecap=\"round\" d={path} />\n        {arrowTransform && (\n          <polygon strokeWidth=\"10\" strokeLinecap=\"round\" points=\"2,7 0,0 11,7 0,14\" transform={arrowTransform} stroke={defaultBg} fill={defaultBg} />\n        )}\n\n        {longClickDot}\n        <path strokeWidth=\"2\" stroke={secondary} fill=\"none\" strokeLinejoin=\"round\" strokeLinecap=\"round\" d={path} />\n        {arrowTransform && (\n          <polygon strokeWidth=\"2\" strokeLinecap=\"round\" points=\"2,7 0,0 11,7 0,14\" transform={arrowTransform} stroke={secondary} fill={secondary} />\n        )}\n      </svg>\n    </div>\n  )\n}\n","import { useRef } from 'react'\nimport { CenterFocusWeak } from '@material-ui/icons'\nimport { secondary, invertedFont } from '../../../../styles/colors'\n\nexport const PositionSpot = (props: any) => {\n  const positionSource = props.positionSource\n  const point = positionSource.point\n  const containerRef = useRef(null)\n  const ref = useRef(null)\n\n  const x = point.x * 100 + '%'\n  const y = point.y * 100 + '%'\n\n  return (\n    <div\n      ref={containerRef}\n      style={{\n        position: 'relative',\n        height: '200px',\n        width: '200px',\n        backgroundColor: 'rgba(100,100,100)',\n        ...props.style\n      }}\n    >\n      {props.children}\n      <CenterFocusWeak\n        ref={ref}\n        style={{\n          color: invertedFont,\n          position: 'absolute',\n          width: 10,\n          height: 10,\n          padding: 20,\n          borderRadius: 35,\n          left: `calc(${x} - 5px)`,\n          top: `calc(${y} - 5px)`,\n          cursor: 'grabbing',\n          zIndex: 101,\n          backgroundColor: secondary\n        }}\n      />\n    </div>\n  )\n}\n","import { ArrowBack } from '@material-ui/icons'\nimport { secondary, transparentWhite } from '../../../../styles/colors'\nimport { Step } from '../../types'\n\ninterface Props {\n  step: Step\n}\n\nexport const AtoBline = ({ step }: Props) => {\n  const p1 = step.startPositionSource.point\n  const p2 = step.endPositionSource.point\n  const centerX = (p1.x + p2.x) / 2\n  const centerY = (p1.y + p2.y) / 2\n  const dx = p1.x - p2.x\n  const dy = p1.y - p2.y\n  const deg = (Math.atan2(dy, dx) * 180) / Math.PI\n\n  return (\n    <ArrowBack\n      style={{\n        position: 'absolute',\n        backgroundColor: transparentWhite,\n        color: secondary,\n        zIndex: 101,\n        top: `calc(${centerY * 100}% - 35px)`,\n        left: `calc(${centerX * 100}% - 35px)`,\n        width: 70,\n        height: 70,\n        padding: 20,\n        borderRadius: 35,\n        transform: `rotate(${deg}deg)`\n      }}\n    />\n  )\n}\n","/* eslint-disable jsx-a11y/alt-text */\nimport { DrawWidget } from './common/FreeDragLine'\nimport { PositionSpot } from './common/PositionSpot'\nimport { AtoBline } from './common/AtoBline'\n\nconst DragAndDrop = 'DragAndDrop'\nexport const DrawDragLine = (props: any) => {\n  const { src, step } = props\n\n  return (\n    <>\n      {step.dragType === DragAndDrop && <DrawWidget step={step} src={src} />}\n      {step.dragType !== DragAndDrop && (\n        <PositionSpot\n          style={{ position: 'relative', zIndex: 100, width: 'fit-content', height: 'fit-content' }}\n          positionSource={step.endPositionSource}\n        >\n          <PositionSpot\n            style={{ position: 'relative', zIndex: 100, width: 'fit-content', height: 'fit-content' }}\n            positionSource={step.startPositionSource}\n          >\n            <img style={{ maxWidth: '100%', maxHeight: '-webkit-fill-available' }} src={src} />\n          </PositionSpot>\n          <AtoBline step={step} />\n        </PositionSpot>\n      )}\n    </>\n  )\n}\n","import { matchColor, roiColor } from '../../../styles/colors'\nimport { Step } from '../types'\nimport { DrawDragLine } from './DrawDragLine'\n\nconst RectView = ({ match, opacity, style }: any) => {\n  let renderStyle: any = {\n    position: 'absolute',\n    fontSize: 9,\n    left: `${match?.position?.x * 100}%`,\n    top: `${match?.position?.y * 100}%`,\n    width: `${match?.size?.width * 100}%`,\n    height: `${match?.size?.height * 100}%`,\n    opacity: opacity ? opacity : 1,\n    border: `2px solid rgb(110,0,255)`,\n    outline: `2px solid ${matchColor}`\n  }\n\n  if (style) {\n    renderStyle = { ...renderStyle, ...style }\n  }\n\n  return <div style={renderStyle}>{/*p: {match.probability.toFixed(3)}*/}</div>\n}\n\nexport const ImageMatchView = (props: any) => {\n  const borderRadius = 5\n  const { matchIndex, matches, selection, roi, maxWidth, style, src, children, step, ...rest } = props\n\n  return (\n    <div\n      {...rest}\n      style={{\n        position: 'relative',\n        overflow: 'hidden',\n        maxWidth: maxWidth,\n        borderRadius,\n        ...style\n      }}\n    >\n      {step.type !== 'drag' && <img src={src} width=\"100%\" alt=\"ImageMatchView\" style={{ borderRadius, display: 'block' }} />}\n      {step.type === 'drag' && <DrawDragLine step={step as Step} src={src} />}\n\n      {matches && matches.length\n        ? matches.map((match: any, index: any) => <RectView key={index} match={match} opacity={index === matchIndex ? 1 : 0.25} />)\n        : selection && <RectView rect={selection} />}\n\n      {roi && (\n        <RectView\n          rect={roi}\n          style={{\n            color: roiColor\n            // border: `1px solid ${successLight}`,\n            // outline: '1000px solid #510000b5'\n          }}\n        />\n      )}\n      {children}\n    </div>\n  )\n}\n","import React from 'react'\nimport { superLight } from '../../../../styles/colors'\n\ninterface Props {\n  height?: string\n  top?: string\n  left?: string\n  showTip?: boolean\n}\n\nexport const VerticalLine = (props: Props) => {\n  const { height, showTip = true } = props\n  return (\n    <div\n      className=\"vl\"\n      style={{\n        borderRight: `2px solid ${superLight}`,\n        height: height || '30px'\n        // marginTop: '5px'\n      }}\n    >\n      {showTip && (\n        <div\n          className=\"point\"\n          style={{\n            position: 'absolute',\n            borderTop: `12px solid ${superLight}`,\n            borderRight: '8px solid transparent',\n            borderLeft: '8px solid transparent',\n            marginLeft: '-7px',\n            top: '100%'\n          }}\n        ></div>\n      )}\n    </div>\n  )\n}\n","/* eslint-disable jsx-a11y/alt-text */\n// @ts-check\nimport { Avatar, CardHeader, Typography } from '@mui/material'\nimport React from 'react'\nimport { BatchRunExportDataDirName } from '../../../config'\nimport { errorGradient, errorMedium, errorWarm, success, successFont, successGradient, superLight, turmeric } from '../../../styles/colors'\nimport { Step, StepResult, Test, TestRun } from '../types'\nimport { formatDateTime, formatUserfacingTestId as formatId, getStepInfo } from '../../../lib/StringUtils'\nimport TagWidget from './TagWidget'\nimport { ImageMatchView } from './ImageMatchView'\nimport { VerticalLine } from './common'\n\ninterface Props {\n  test: Test\n  testRun: TestRun\n  refTestRun: TestRun | undefined\n  index: number\n  step: Step\n  stepResult: StepResult\n  referenceSResult: StepResult | null\n  refList: React.RefObject<HTMLImageElement>[]\n  failStepRef: React.MutableRefObject<null>\n  baseSrc?: string // contains absolute path in case of repeato studio\n}\n\nconst stepType = {\n  fontSize: '0.7rem',\n  color: 'rgba(0, 0, 0, 0.6)'\n}\nconst stepImageIcon: React.CSSProperties = {\n  width: 'auto',\n  maxHeight: '3rem'\n  // margin: '11px'\n}\n\nconst hBox: any = (org = true) => {\n  return {\n    position: 'absolute',\n    bottom: 0,\n    textAlign: 'center',\n    width: '100%',\n    borderRadius: '0 0 4px 4px'\n  }\n}\n\nconst lBox: any = (org = true) => {\n  return {\n    position: 'absolute',\n    width: '600px',\n    bottom: org ? '200px' : '0'\n  }\n}\nconst formatPercentage = (value: string) => {\n  const valueNum = parseFloat(value)\n  return `${(valueNum * 100).toFixed(2)}%`\n}\n\nconst pStep = (step: Step, stepName: string) => (\n  <React.Fragment>\n    <span>{stepName}</span>\n    {step.type !== 'comment' && <span style={stepType}>{` ID: ${formatId(step?.id)}`}</span>}\n  </React.Fragment>\n)\n\nconst stepImage = (test: Test, name: string, style: React.CSSProperties) => (\n  <React.Fragment>\n    <img style={style} src={name} alt={test.id} />\n  </React.Fragment>\n)\n\n// arrows to point out towards the next step\nconst getArrows = (testRun: TestRun, index: number) => {\n  const nextStep = testRun.stepResults[index]\n  if (!nextStep) return\n  // const step = stepResults[index - 1]\n  return <VerticalLine height=\"30px\" />\n}\n\nexport const StepsItem = (props: Props) => {\n  const { test, testRun, index, step, refList, stepResult, referenceSResult, failStepRef, refTestRun, baseSrc: bSrc } = props\n  const [isDiffBatchHovered, setDiffBatchHovered] = React.useState(false)\n  const [isDiffViewHovered, setDiffViewHovered] = React.useState(false)\n  const baseSrc = bSrc ? `file://${bSrc}` : `./${BatchRunExportDataDirName}/${test.id}`\n  const trBaseSrc = `testRuns/${testRun.id}`\n\n  const stepName = getStepInfo(step as Step, 'all', false)\n  const isSuccess = stepResult?.success\n  const ref: React.RefObject<HTMLImageElement> = React.createRef()\n  const isCopy = stepResult?.copy\n  const border = `0px solid ${!isSuccess ? errorWarm : turmeric}`\n  const similarityWarnThreshold = Number(test?.similarityWarnThreshold || '0.00')\n  console.log('TestRunDevices', JSON.stringify(testRun), JSON.stringify(stepResult))\n  const deviceData = testRun.devices.find(d => d.serial === stepResult.executedOn)\n  const executionSkipped = step.type === 'comment' // we don't excute for comment step\n  let isLandscape =\n    deviceData?.currentRotation === deviceData?.rotationVars.landscape || deviceData?.currentRotation === deviceData?.rotationVars.seascape\n  isLandscape = !deviceData ? false : isLandscape // in case of switch step we might not have deviceData if device was not attached then assume false\n  console.log('deviceData', JSON.stringify(deviceData), isLandscape)\n\n  refList.push(ref)\n\n  let orgFrameSrc = step?.originalFrame && `${baseSrc}/${step?.originalFrame}`\n  if (referenceSResult) {\n    orgFrameSrc = `${baseSrc}/${`testRuns/${refTestRun?.id}/` + referenceSResult.screenshot}`\n  }\n\n  const screenshotSrc = stepResult?.screenshot && `${baseSrc}/${trBaseSrc}/${stepResult?.screenshot}`\n\n  // data to show on image hover\n  const stepHoverDetail = (type: string, isLandscape = true) => {\n    const isOriginal = type === 'org'\n    const stepColor = stepResult?.success ? success : errorWarm // success in case if test passed\n    const backgroundColor = isOriginal ? success : stepColor // original screenshot will always be success\n    const lStyleType = isOriginal ? !!stepResult?.screenshot : false // landscape box positioning if testRun screenshot exist\n    const hStyleType = isOriginal ? true : !step?.originalFrame // horizontal box left right prop if original screenshot exist\n    const text = isOriginal ? (referenceSResult ? 'Reference Test Run' : 'Original') : 'Test Run'\n    const date =\n      isOriginal && !referenceSResult ? step?.createdOn : referenceSResult && isOriginal ? referenceSResult.createdOn : stepResult?.createdOn\n    const boxStyle = isLandscape ? lBox(lStyleType) : hBox(hStyleType) // horizontal box or landscape box\n    // const typoStyle = isLandscape ? lTypoStyle : hTypoStyle // horizontal typo or landscape\n\n    return (\n      <div className=\"info\" style={{ ...boxStyle, backgroundColor, paddingTop: 10, height: 55 }}>\n        <Typography variant=\"body1\">{text} Screenshot</Typography>\n        <Typography variant=\"body2\">{formatDateTime(new Date(date))}</Typography>\n      </div>\n    )\n  }\n\n  const renderResult = (src: string | undefined, type: string) => {\n    //const { roi } = calculateRoi(step as Step)\n    if (!src) return placeHolder(type)\n\n    let matches = type === 'org' ? step?.matches : stepResult?.matches\n    if (referenceSResult) {\n      matches = referenceSResult.matches\n    }\n\n    return (\n      <div className=\"matchResult\" style={{ flexBasis: '50%', position: 'relative' }}>\n        <ImageMatchView\n          matchIndex={step?.matchIndex}\n          matches={matches}\n          selection={step?.selection}\n          roi={step?.region}\n          width={200}\n          src={src}\n          step={step}\n        />\n\n        {stepHoverDetail(type, false)}\n      </div>\n    )\n  }\n\n  const placeHolder = (type: any) => {\n    return (\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          flexGrow: 1,\n          position: 'relative',\n          backgroundColor: superLight,\n          borderRadius: 4,\n          minHeight: 300\n        }}\n      >\n        <Typography>Not available</Typography>\n        {stepHoverDetail(type, false)}\n      </div>\n    )\n  }\n\n  const MaxSize = 600\n\n  return (\n    <>\n      <div\n        className=\"stepWrapper\"\n        ref={!isCopy && !isSuccess ? failStepRef : null}\n        style={{\n          minWidth: MaxSize,\n          maxWidth: MaxSize,\n          border: isCopy ? '' : border\n        }}\n      >\n        <CardHeader\n          avatar={\n            (!executionSkipped && (\n              <Avatar style={{ backgroundColor: isSuccess ? success : errorWarm }} aria-label=\"step-no\">\n                {stepName.icon && <stepName.icon />}\n              </Avatar>\n            )) || <p></p>\n          }\n          title={pStep(step as Step, stepName.primary)}\n          subheader={\n            <>\n              <span style={{ whiteSpace: 'pre-wrap', overflow: 'hidden' }}>{stepName.secondary}</span>\n              {step?.tags?.map((tag: any, index: number) => (\n                <TagWidget name={tag} key={index} />\n              ))}\n            </>\n          }\n          action={step?.image && <>{stepImage(test, `${baseSrc}/${step?.image}`, stepImageIcon)}</>}\n          style={{}}\n        />\n\n        <div\n          style={{\n            borderBottom: '2px solid ' + superLight\n          }}\n        >\n          <div\n            style={{\n              position: 'relative',\n\n              paddingBottom: 20\n            }}\n          >\n            {!executionSkipped && (\n              <div style={{ display: 'flex', flexDirection: isLandscape ? 'column' : 'row' }}>\n                {renderResult(orgFrameSrc, 'org')}\n                <div style={{ height: 10, width: 10 }}></div>\n                {renderResult(screenshotSrc, 'testRun')}\n              </div>\n            )}\n\n            {stepResult?.screenSimilarity && (\n              <>\n                <div style={{ position: 'absolute', bottom: 0, width: '100%', height: 100, overflow: 'hidden' }}>\n                  <div\n                    className={`similarityBatch ${Number(stepResult?.screenSimilarity) > similarityWarnThreshold ? 'above' : 'below'}`}\n                    onMouseEnter={event => setDiffBatchHovered(true)}\n                    onMouseLeave={event => setDiffBatchHovered(false)}\n                  >\n                    <Typography variant=\"body1\">{formatPercentage(stepResult?.screenSimilarity)}</Typography>\n                    <Typography variant=\"body2\">Screen Similarity</Typography>\n                  </div>\n                </div>\n                {(isDiffBatchHovered || isDiffViewHovered) && orgFrameSrc && screenshotSrc && (\n                  <div\n                    onMouseEnter={event => setDiffViewHovered(true)}\n                    onMouseLeave={event => setDiffViewHovered(false)}\n                    className=\"diffImg\"\n                    style={{\n                      width: MaxSize,\n                      height: MaxSize,\n                      position: 'absolute',\n                      justifyContent: 'center',\n                      alignItems: 'center',\n                      display: 'flex',\n                      backgroundColor: '#FFF',\n                      boxShadow: '0px 2px 28px #00000057',\n                      borderRadius: 5,\n                      top: 0\n                    }}\n                  >\n                    <img\n                      src={orgFrameSrc}\n                      style={{ position: 'absolute', maxHeight: MaxSize, maxWidth: MaxSize, boxShadow: '0px 2px 28px #00000057' }}\n                    />\n                    <img src={screenshotSrc} style={{ position: 'absolute', maxHeight: MaxSize, maxWidth: MaxSize, mixBlendMode: 'difference' }} />\n                  </div>\n                )}\n              </>\n            )}\n          </div>\n          {stepResult?.message && (\n            <div\n              style={{\n                borderRadius: 4,\n                padding: 10,\n                background: isSuccess ? successGradient : errorGradient,\n                marginBottom: 20\n              }}\n            >\n              <Typography variant=\"body2\" sx={{ color: isSuccess ? successFont : errorMedium, whiteSpace: 'pre-wrap', fontFamily: 'monospace' }}>\n                {stepResult?.message}\n              </Typography>\n            </div>\n          )}\n        </div>\n\n        {/* <CardActions disableSpacing></CardActions> */}\n      </div>\n\n      {getArrows(testRun, index + 1)}\n    </>\n  )\n}\n","import { Box } from '@mui/material'\nimport React from 'react'\nimport { Step, StepResult, Test } from '../types'\nimport { StepsItem } from './StepItem'\n\ninterface Props {\n  test: Test\n  failStepRef: React.MutableRefObject<null>\n  baseSrc?: string // repeato studio sends the absolute path\n}\n\nconst stepBox: any = {\n  display: 'flex',\n  flexDirection: 'column',\n  mt: '10px',\n  justifyContent: 'center',\n  alignItems: 'center',\n  position: 'relative'\n}\n\n// const lTypoStyle: any = {\n//   text: { p: 1, float: 'left' },\n//   date: { p: 1, float: 'right' }\n// }\n// const hTypoStyle: any = {\n//   text: { pt: 1 },\n//   date: { pb: 1 }\n// }\n\nexport const StepsInfo = (props: Props) => {\n  const { test, failStepRef, baseSrc } = props\n  const testRun = test?.testRuns[test?.testRuns.length - 1]\n  console.log('TestRun', test?.testRuns.length - 1, JSON.stringify(test.testRuns))\n  const refTestRun = test?.testRuns.find(\n    (tr, i) => tr.wasSuccessful && tr.stepResults.length && test.testRuns.length !== i + 1 /**&& tr.devices[0]?.serial === test.devices[0]?.serial*/\n  )\n\n  if (!testRun) {\n    return null\n  }\n\n  const stepResults = [...testRun?.stepResults] // as we are updating stepResults later so to avoid updating original data\n\n  const refList: React.RefObject<HTMLImageElement>[] = []\n\n  let currSResult: StepResult | null = null\n  let referenceSResult: StepResult | null = null\n  let currStep: Step | null = null\n\n    // verify if there are any missing steps due to failed step\n  ;(() => {\n    const stepsCount = test?.steps?.length\n    const stepRunsCount = stepResults?.length\n    const missingStepRuns = stepsCount - stepRunsCount\n\n    // copy the original steps to stepResults for rendering\n    if (missingStepRuns > 0) {\n      const startCopyFrom = stepsCount - missingStepRuns\n\n      for (let i = startCopyFrom; i < stepsCount; i++) {\n        // console.log('CopyingStep', test?.steps[i]);\n        stepResults[i] = {} as any\n        stepResults[i].step = test?.steps[i]\n        stepResults[i].success = false\n        stepResults[i].copy = true // just to keep record it's copied step\n      }\n    }\n  })()\n\n  return (\n    <>\n      {stepResults.length &&\n        stepResults.map((sResult, index: number) => {\n          const opacity = sResult?.copy ? '0.5' : '1'\n          currSResult = sResult\n          referenceSResult = refTestRun?.stepResults?.find(refSr => refSr.step.id === currSResult?.step.id) || null\n          currStep = sResult.step\n\n          if (currStep.type === 'subTest') return null // this is an extra step recieving from repeato studio so skip it\n\n          return (\n            <Box className=\"stepCard\" sx={{ ...stepBox, opacity }} key={index}>\n              <StepsItem\n                failStepRef={failStepRef}\n                test={test}\n                refList={refList}\n                step={currStep}\n                stepResult={currSResult}\n                referenceSResult={referenceSResult}\n                refTestRun={refTestRun}\n                testRun={testRun}\n                index={index}\n                baseSrc={baseSrc}\n              />\n            </Box>\n          )\n        })}\n    </>\n  )\n}\n","import * as React from 'react'\nimport ListIcon from '@material-ui/icons/List'\nimport { Avatar } from '@material-ui/core'\nimport { Test } from '../types'\nimport { success, bg2, errorWarm } from '../../../styles/colors'\nimport { BatchRunExportDataDirName } from '../../../config'\n\ninterface TestIconProps {\n  test: Test\n}\n\nexport const TestIcon = (props: TestIconProps) => {\n  const { test } = props\n\n  const baseSrc = `./${BatchRunExportDataDirName}/${test.id}`\n  const avatarStyle = { width: 18, height: 18 }\n  const testRun = test?.testRuns[test?.testRuns.length - 1]\n  const bg = testRun ? (testRun.wasSuccessful ? success : errorWarm) : bg2\n  const stepsWithImage = test.steps.filter(step => Boolean(step.image))\n  const icon = <ListIcon />\n\n  let avatarSrc = ''\n\n  if (stepsWithImage.length > 0) {\n    const lastStep = stepsWithImage[stepsWithImage.length - 1]\n    avatarSrc = `${baseSrc}/${lastStep.originalFrame}`\n  }\n\n  const avatar = (\n    <Avatar src={avatarSrc} style={avatarStyle}>\n      {icon}\n    </Avatar>\n  )\n\n  return (\n    <div className=\"stack-container\">\n      <div style={{ borderRadius: '50%', border: `2px solid ${bg}` }}>{avatar}</div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { IconButton } from '@mui/material'\nimport { StepsInfo, TestInfo } from './'\nimport { Test } from '../types'\nimport { Close } from '@material-ui/icons'\nimport { transparentWhite } from '../../../styles/colors'\nimport { useNavigate, useParams } from 'react-router'\n\ninterface Props {\n  setActiveTab: React.Dispatch<React.SetStateAction<number | null>>\n}\n\nexport const TestView = ({ setActiveTab }: Props) => {\n  const { testId, testIndex = 0 } = useParams()\n  const navigate = useNavigate()\n\n  const tests = batchRun.tests || []\n  const failStepRef = React.useRef(null)\n  const [test, setTest] = React.useState<Test | undefined>(undefined)\n\n  React.useEffect(() => setActiveTab(Number(testIndex)), [])\n\n  // we are not using testIndex to filter anymore because index can be changed when perform searching/filters\n  // testIds can be same if test is added multiple times in batch but for now report get overwritten by last testRun if test is same\n  // so for now filtering by test id works fine, but in case more support is added for same tests\n  // then we might introduce testRun date or any other unique field to identify tests uniquely\n  React.useEffect(() => setTest(tests.find(t => t.id === testId) as any), [testId]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <>\n      <IconButton\n        id=\"closeButton\"\n        style={{ position: 'fixed', right: 30, top: 40, backgroundColor: transparentWhite, zIndex: 100 }}\n        onClick={() => {\n          setActiveTab(null)\n          navigate('/')\n        }}\n      >\n        <Close />\n      </IconButton>\n\n      {test && (\n        <div id=\"scrollContainer\" style={{ flexGrow: 1, overflow: 'scroll', padding: 40 }}>\n          <TestInfo test={test} failStepRef={failStepRef} />\n          <StepsInfo test={test} failStepRef={failStepRef} />\n        </div>\n      )}\n      {!test && <p>Test not found!</p>}\n    </>\n  )\n}\n","import React from 'react'\nimport { Route, Routes } from 'react-router-dom'\nimport './App.css'\nimport { createTheme } from '@material-ui/core'\nimport { darkBg, darkBg2, lighterFont, lightestFont, secondary } from '../../styles/colors'\nimport { ThemeProvider } from '@mui/material'\nimport { Sidebar, TestView } from './components'\n\nconst commonThemeProps = {\n  typography: {\n    h1: {\n      fontSize: '1.7rem',\n      fontWeight: 400\n    },\n    h2: {\n      fontSize: '1.2rem',\n      fontWeight: 400\n    },\n    h3: {\n      fontSize: '0.8rem',\n      fontWeight: 400,\n      color: darkBg2,\n      marginBottom: 3\n    },\n    h4: {\n      fontSize: '0.7rem',\n      fontWeight: 400\n    },\n    h5: {\n      fontSize: '0.5rem',\n      fontWeight: 400\n    },\n    h6: {\n      // dialog title\n      fontSize: '1.2rem',\n      fontWeight: 400\n    },\n    caption: {\n      // dialog title\n      color: '#999999',\n      fontSize: '0.7rem'\n    },\n    body1: {\n      fontWeight: 400\n    },\n    body2: {\n      fontSize: '0.7rem',\n      fontWeight: 400\n    },\n    subtitle1: {\n      // why does this not work?\n      fontWeight: 400\n    }\n  }\n}\n\nconst darkTheme = createTheme({\n  ...commonThemeProps,\n  palette: {\n    type: 'dark',\n    primary: {\n      main: darkBg\n    },\n    secondary: {\n      main: secondary\n    }\n  }\n})\n\nconst brightTheme = createTheme({\n  ...commonThemeProps,\n  palette: {\n    type: 'light',\n    text: {\n      primary: lighterFont,\n      secondary: lightestFont\n    },\n    primary: {\n      main: darkBg\n    },\n    secondary: {\n      main: secondary\n    }\n  }\n})\nbrightTheme.typography.h1.color = darkBg\nbrightTheme.typography.h2.color = darkBg\n\nfunction App() {\n  const [activeTab, setActiveTab] = React.useState<number | null>(null) // using index number for selected test - can't used test.id as test can be duplicated in single batch\n\n  // verify the report data is valid or not\n  const verifyReportData = () => {\n    try {\n      if (!batchRun?.id || !batchRun?.tests) {\n        alert('Invalid data OR Report file.')\n        return\n      }\n    } catch (error) {\n      alert('Invalid data OR Report file.')\n    }\n  }\n\n  React.useEffect(() => {\n    verifyReportData()\n  }, [])\n\n  return (\n    <>\n      <ThemeProvider theme={darkTheme}>\n        <Sidebar activeTab={activeTab} setActiveTab={setActiveTab} />\n      </ThemeProvider>\n\n      <ThemeProvider theme={brightTheme}>\n        <Routes>\n          <Route path=\"/\" element={<></>} />\n          <Route path=\"/test/:testIndex/:testId\" element={<TestView setActiveTab={setActiveTab} />} />\n        </Routes>\n      </ThemeProvider>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { HashRouter } from 'react-router-dom'\nimport './index.css'\nimport App from './App'\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}